// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: trace_serializer.proto

package binparse.trace;

@SuppressWarnings({"unused", "static-method"})
public final class TraceSerializer {
  private TraceSerializer() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface TraceInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string tracedFile = 1;
    boolean hasTracedFile();
    String getTracedFile();

    // required uint64 startAddress = 2;
    boolean hasStartAddress();
    long getStartAddress();

    // required uint64 stopAddress = 3;
    boolean hasStopAddress();
    long getStopAddress();
  }
  public static final class TraceInfo extends
      com.google.protobuf.GeneratedMessage
      implements TraceInfoOrBuilder {
    // Use TraceInfo.newBuilder() to construct.
    private TraceInfo(Builder builder) {
      super(builder);
    }
    private TraceInfo(boolean noInit) {}

    private static final TraceInfo defaultInstance;
    public static TraceInfo getDefaultInstance() {
      return defaultInstance;
    }

    @Override
    public TraceInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return binparse.trace.TraceSerializer.internal_static_traces_TraceInfo_descriptor;
    }

    @Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return binparse.trace.TraceSerializer.internal_static_traces_TraceInfo_fieldAccessorTable;
    }

    private int bitField0_;
    // optional string tracedFile = 1;
    public static final int TRACEDFILE_FIELD_NUMBER = 1;
    private java.lang.Object tracedFile_;
    @Override
    public boolean hasTracedFile() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    @Override
    public String getTracedFile() {
      java.lang.Object ref = tracedFile_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          tracedFile_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getTracedFileBytes() {
      java.lang.Object ref = tracedFile_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        tracedFile_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required uint64 startAddress = 2;
    public static final int STARTADDRESS_FIELD_NUMBER = 2;
    private long startAddress_;
    @Override
    public boolean hasStartAddress() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    @Override
    public long getStartAddress() {
      return startAddress_;
    }

    // required uint64 stopAddress = 3;
    public static final int STOPADDRESS_FIELD_NUMBER = 3;
    private long stopAddress_;
    @Override
    public boolean hasStopAddress() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    @Override
    public long getStopAddress() {
      return stopAddress_;
    }

    private void initFields() {
      tracedFile_ = "";
      startAddress_ = 0L;
      stopAddress_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasStartAddress()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStopAddress()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getTracedFileBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, startAddress_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt64(3, stopAddress_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    @Override
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getTracedFileBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, startAddress_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, stopAddress_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static binparse.trace.TraceSerializer.TraceInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static binparse.trace.TraceSerializer.TraceInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static binparse.trace.TraceSerializer.TraceInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static binparse.trace.TraceSerializer.TraceInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static binparse.trace.TraceSerializer.TraceInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static binparse.trace.TraceSerializer.TraceInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static binparse.trace.TraceSerializer.TraceInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static binparse.trace.TraceSerializer.TraceInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static binparse.trace.TraceSerializer.TraceInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static binparse.trace.TraceSerializer.TraceInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }

    public static Builder newBuilder() { return Builder.create(); }
    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(binparse.trace.TraceSerializer.TraceInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements binparse.trace.TraceSerializer.TraceInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return binparse.trace.TraceSerializer.internal_static_traces_TraceInfo_descriptor;
      }

      @Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return binparse.trace.TraceSerializer.internal_static_traces_TraceInfo_fieldAccessorTable;
      }

      // Construct using binparse.trace.TraceSerializer.TraceInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      @Override
      public Builder clear() {
        super.clear();
        tracedFile_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        startAddress_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        stopAddress_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @Override
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return binparse.trace.TraceSerializer.TraceInfo.getDescriptor();
      }

      @Override
      public binparse.trace.TraceSerializer.TraceInfo getDefaultInstanceForType() {
        return binparse.trace.TraceSerializer.TraceInfo.getDefaultInstance();
      }

      @Override
      public binparse.trace.TraceSerializer.TraceInfo build() {
        binparse.trace.TraceSerializer.TraceInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      private binparse.trace.TraceSerializer.TraceInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        binparse.trace.TraceSerializer.TraceInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }

      @Override
      public binparse.trace.TraceSerializer.TraceInfo buildPartial() {
        binparse.trace.TraceSerializer.TraceInfo result = new binparse.trace.TraceSerializer.TraceInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.tracedFile_ = tracedFile_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.startAddress_ = startAddress_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.stopAddress_ = stopAddress_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof binparse.trace.TraceSerializer.TraceInfo) {
          return mergeFrom((binparse.trace.TraceSerializer.TraceInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(binparse.trace.TraceSerializer.TraceInfo other) {
        if (other == binparse.trace.TraceSerializer.TraceInfo.getDefaultInstance()) return this;
        if (other.hasTracedFile()) {
          setTracedFile(other.getTracedFile());
        }
        if (other.hasStartAddress()) {
          setStartAddress(other.getStartAddress());
        }
        if (other.hasStopAddress()) {
          setStopAddress(other.getStopAddress());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      @Override
      public final boolean isInitialized() {
        if (!hasStartAddress()) {

          return false;
        }
        if (!hasStopAddress()) {

          return false;
        }
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              tracedFile_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              startAddress_ = input.readUInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              stopAddress_ = input.readUInt64();
              break;
            }
          }
        }
      }

      private int bitField0_;

      // optional string tracedFile = 1;
      private java.lang.Object tracedFile_ = "";
      @Override
      public boolean hasTracedFile() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      @Override
      public String getTracedFile() {
        java.lang.Object ref = tracedFile_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          tracedFile_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setTracedFile(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        tracedFile_ = value;
        onChanged();
        return this;
      }
      public Builder clearTracedFile() {
        bitField0_ = (bitField0_ & ~0x00000001);
        tracedFile_ = getDefaultInstance().getTracedFile();
        onChanged();
        return this;
      }
      void setTracedFile(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        tracedFile_ = value;
        onChanged();
      }

      // required uint64 startAddress = 2;
      private long startAddress_ ;
      @Override
      public boolean hasStartAddress() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      @Override
      public long getStartAddress() {
        return startAddress_;
      }
      public Builder setStartAddress(long value) {
        bitField0_ |= 0x00000002;
        startAddress_ = value;
        onChanged();
        return this;
      }
      public Builder clearStartAddress() {
        bitField0_ = (bitField0_ & ~0x00000002);
        startAddress_ = 0L;
        onChanged();
        return this;
      }

      // required uint64 stopAddress = 3;
      private long stopAddress_ ;
      @Override
      public boolean hasStopAddress() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      @Override
      public long getStopAddress() {
        return stopAddress_;
      }
      public Builder setStopAddress(long value) {
        bitField0_ |= 0x00000004;
        stopAddress_ = value;
        onChanged();
        return this;
      }
      public Builder clearStopAddress() {
        bitField0_ = (bitField0_ & ~0x00000004);
        stopAddress_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:traces.TraceInfo)
    }

    static {
      defaultInstance = new TraceInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:traces.TraceInfo)
  }

  public interface ModuleOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .traces.Module.Segment segments = 1;
    java.util.List<binparse.trace.TraceSerializer.Module.Segment>
        getSegmentsList();
    binparse.trace.TraceSerializer.Module.Segment getSegments(int index);
    int getSegmentsCount();
    java.util.List<? extends binparse.trace.TraceSerializer.Module.SegmentOrBuilder>
        getSegmentsOrBuilderList();
    binparse.trace.TraceSerializer.Module.SegmentOrBuilder getSegmentsOrBuilder(
        int index);
  }
  public static final class Module extends
      com.google.protobuf.GeneratedMessage
      implements ModuleOrBuilder {
    // Use Module.newBuilder() to construct.
    private Module(Builder builder) {
      super(builder);
    }
    private Module(boolean noInit) {}

    private static final Module defaultInstance;
    public static Module getDefaultInstance() {
      return defaultInstance;
    }

    @Override
    public Module getDefaultInstanceForType() {
      return defaultInstance;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return binparse.trace.TraceSerializer.internal_static_traces_Module_descriptor;
    }

    @Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return binparse.trace.TraceSerializer.internal_static_traces_Module_fieldAccessorTable;
    }

    public interface SegmentOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional string name = 1;
      boolean hasName();
      String getName();

      // optional string fileName = 2;
      boolean hasFileName();
      String getFileName();

      // optional int32 permissions = 3;
      boolean hasPermissions();
      int getPermissions();

      // required .traces.Module.Segment.Endianness endianness = 4;
      boolean hasEndianness();
      binparse.trace.TraceSerializer.Module.Segment.Endianness getEndianness();

      // required uint64 address = 5;
      boolean hasAddress();
      long getAddress();

      // required uint32 size = 6;
      boolean hasSize();
      int getSize();

      // optional bytes data = 7;
      boolean hasData();
      com.google.protobuf.ByteString getData();
    }
    public static final class Segment extends
        com.google.protobuf.GeneratedMessage
        implements SegmentOrBuilder {
      // Use Segment.newBuilder() to construct.
      private Segment(Builder builder) {
        super(builder);
      }
      private Segment(boolean noInit) {}

      private static final Segment defaultInstance;
      public static Segment getDefaultInstance() {
        return defaultInstance;
      }

      @Override
      public Segment getDefaultInstanceForType() {
        return defaultInstance;
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return binparse.trace.TraceSerializer.internal_static_traces_Module_Segment_descriptor;
      }

      @Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return binparse.trace.TraceSerializer.internal_static_traces_Module_Segment_fieldAccessorTable;
      }

      public enum Endianness
          implements com.google.protobuf.ProtocolMessageEnum {
        LITTLE(0, 0),
        BIG(1, 1),
        ;

        public static final int LITTLE_VALUE = 0;
        public static final int BIG_VALUE = 1;


        @Override
        public final int getNumber() { return value; }

        public static Endianness valueOf(int value) {
          switch (value) {
            case 0: return LITTLE;
            case 1: return BIG;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<Endianness>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static com.google.protobuf.Internal.EnumLiteMap<Endianness>
            internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<Endianness>() {
                @Override
                public Endianness findValueByNumber(int number) {
                  return Endianness.valueOf(number);
                }
              };

        @Override
        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          return getDescriptor().getValues().get(index);
        }
        @Override
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return binparse.trace.TraceSerializer.Module.Segment.getDescriptor().getEnumTypes().get(0);
        }

        private static final Endianness[] VALUES = {
          LITTLE, BIG,
        };

        public static Endianness valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          return VALUES[desc.getIndex()];
        }

        private final int index;
        private final int value;

        private Endianness(int index, int value) {
          this.index = index;
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:traces.Module.Segment.Endianness)
      }

      private int bitField0_;
      // optional string name = 1;
      public static final int NAME_FIELD_NUMBER = 1;
      private java.lang.Object name_;
      @Override
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      @Override
      public String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          return (String) ref;
        } else {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (com.google.protobuf.Internal.isValidUtf8(bs)) {
            name_ = s;
          }
          return s;
        }
      }
      private com.google.protobuf.ByteString getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8((String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // optional string fileName = 2;
      public static final int FILENAME_FIELD_NUMBER = 2;
      private java.lang.Object fileName_;
      @Override
      public boolean hasFileName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      @Override
      public String getFileName() {
        java.lang.Object ref = fileName_;
        if (ref instanceof String) {
          return (String) ref;
        } else {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (com.google.protobuf.Internal.isValidUtf8(bs)) {
            fileName_ = s;
          }
          return s;
        }
      }
      private com.google.protobuf.ByteString getFileNameBytes() {
        java.lang.Object ref = fileName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8((String) ref);
          fileName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // optional int32 permissions = 3;
      public static final int PERMISSIONS_FIELD_NUMBER = 3;
      private int permissions_;
      @Override
      public boolean hasPermissions() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      @Override
      public int getPermissions() {
        return permissions_;
      }

      // required .traces.Module.Segment.Endianness endianness = 4;
      public static final int ENDIANNESS_FIELD_NUMBER = 4;
      private binparse.trace.TraceSerializer.Module.Segment.Endianness endianness_;
      @Override
      public boolean hasEndianness() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      @Override
      public binparse.trace.TraceSerializer.Module.Segment.Endianness getEndianness() {
        return endianness_;
      }

      // required uint64 address = 5;
      public static final int ADDRESS_FIELD_NUMBER = 5;
      private long address_;
      @Override
      public boolean hasAddress() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      @Override
      public long getAddress() {
        return address_;
      }

      // required uint32 size = 6;
      public static final int SIZE_FIELD_NUMBER = 6;
      private int size_;
      @Override
      public boolean hasSize() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      @Override
      public int getSize() {
        return size_;
      }

      // optional bytes data = 7;
      public static final int DATA_FIELD_NUMBER = 7;
      private com.google.protobuf.ByteString data_;
      @Override
      public boolean hasData() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      @Override
      public com.google.protobuf.ByteString getData() {
        return data_;
      }

      private void initFields() {
        name_ = "";
        fileName_ = "";
        permissions_ = 0;
        endianness_ = binparse.trace.TraceSerializer.Module.Segment.Endianness.LITTLE;
        address_ = 0L;
        size_ = 0;
        data_ = com.google.protobuf.ByteString.EMPTY;
      }
      private byte memoizedIsInitialized = -1;
      @Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasEndianness()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasAddress()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasSize()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      @Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getNameBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getFileNameBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeInt32(3, permissions_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeEnum(4, endianness_.getNumber());
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeUInt64(5, address_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeUInt32(6, size_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          output.writeBytes(7, data_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      @Override
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getNameBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getFileNameBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, permissions_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(4, endianness_.getNumber());
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(5, address_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(6, size_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(7, data_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static binparse.trace.TraceSerializer.Module.Segment parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static binparse.trace.TraceSerializer.Module.Segment parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static binparse.trace.TraceSerializer.Module.Segment parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static binparse.trace.TraceSerializer.Module.Segment parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static binparse.trace.TraceSerializer.Module.Segment parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static binparse.trace.TraceSerializer.Module.Segment parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static binparse.trace.TraceSerializer.Module.Segment parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static binparse.trace.TraceSerializer.Module.Segment parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static binparse.trace.TraceSerializer.Module.Segment parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static binparse.trace.TraceSerializer.Module.Segment parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }

      public static Builder newBuilder() { return Builder.create(); }
      @Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(binparse.trace.TraceSerializer.Module.Segment prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      @Override
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements binparse.trace.TraceSerializer.Module.SegmentOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return binparse.trace.TraceSerializer.internal_static_traces_Module_Segment_descriptor;
        }

        @Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return binparse.trace.TraceSerializer.internal_static_traces_Module_Segment_fieldAccessorTable;
        }

        // Construct using binparse.trace.TraceSerializer.Module.Segment.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }

        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        @Override
        public Builder clear() {
          super.clear();
          name_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          fileName_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          permissions_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          endianness_ = binparse.trace.TraceSerializer.Module.Segment.Endianness.LITTLE;
          bitField0_ = (bitField0_ & ~0x00000008);
          address_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000010);
          size_ = 0;
          bitField0_ = (bitField0_ & ~0x00000020);
          data_ = com.google.protobuf.ByteString.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000040);
          return this;
        }

        @Override
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        @Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return binparse.trace.TraceSerializer.Module.Segment.getDescriptor();
        }

        @Override
        public binparse.trace.TraceSerializer.Module.Segment getDefaultInstanceForType() {
          return binparse.trace.TraceSerializer.Module.Segment.getDefaultInstance();
        }

        @Override
        public binparse.trace.TraceSerializer.Module.Segment build() {
          binparse.trace.TraceSerializer.Module.Segment result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        private binparse.trace.TraceSerializer.Module.Segment buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          binparse.trace.TraceSerializer.Module.Segment result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }

        @Override
        public binparse.trace.TraceSerializer.Module.Segment buildPartial() {
          binparse.trace.TraceSerializer.Module.Segment result = new binparse.trace.TraceSerializer.Module.Segment(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.name_ = name_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.fileName_ = fileName_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.permissions_ = permissions_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.endianness_ = endianness_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.address_ = address_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.size_ = size_;
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000040;
          }
          result.data_ = data_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof binparse.trace.TraceSerializer.Module.Segment) {
            return mergeFrom((binparse.trace.TraceSerializer.Module.Segment)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(binparse.trace.TraceSerializer.Module.Segment other) {
          if (other == binparse.trace.TraceSerializer.Module.Segment.getDefaultInstance()) return this;
          if (other.hasName()) {
            setName(other.getName());
          }
          if (other.hasFileName()) {
            setFileName(other.getFileName());
          }
          if (other.hasPermissions()) {
            setPermissions(other.getPermissions());
          }
          if (other.hasEndianness()) {
            setEndianness(other.getEndianness());
          }
          if (other.hasAddress()) {
            setAddress(other.getAddress());
          }
          if (other.hasSize()) {
            setSize(other.getSize());
          }
          if (other.hasData()) {
            setData(other.getData());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        @Override
        public final boolean isInitialized() {
          if (!hasEndianness()) {

            return false;
          }
          if (!hasAddress()) {

            return false;
          }
          if (!hasSize()) {

            return false;
          }
          return true;
        }

        @Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  onChanged();
                  return this;
                }
                break;
              }
              case 10: {
                bitField0_ |= 0x00000001;
                name_ = input.readBytes();
                break;
              }
              case 18: {
                bitField0_ |= 0x00000002;
                fileName_ = input.readBytes();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                permissions_ = input.readInt32();
                break;
              }
              case 32: {
                int rawValue = input.readEnum();
                binparse.trace.TraceSerializer.Module.Segment.Endianness value = binparse.trace.TraceSerializer.Module.Segment.Endianness.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(4, rawValue);
                } else {
                  bitField0_ |= 0x00000008;
                  endianness_ = value;
                }
                break;
              }
              case 40: {
                bitField0_ |= 0x00000010;
                address_ = input.readUInt64();
                break;
              }
              case 48: {
                bitField0_ |= 0x00000020;
                size_ = input.readUInt32();
                break;
              }
              case 58: {
                bitField0_ |= 0x00000040;
                data_ = input.readBytes();
                break;
              }
            }
          }
        }

        private int bitField0_;

        // optional string name = 1;
        private java.lang.Object name_ = "";
        @Override
        public boolean hasName() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        @Override
        public String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof String)) {
            String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
            name_ = s;
            return s;
          } else {
            return (String) ref;
          }
        }
        public Builder setName(String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }
        public Builder clearName() {
          bitField0_ = (bitField0_ & ~0x00000001);
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        void setName(com.google.protobuf.ByteString value) {
          bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
        }

        // optional string fileName = 2;
        private java.lang.Object fileName_ = "";
        @Override
        public boolean hasFileName() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        @Override
        public String getFileName() {
          java.lang.Object ref = fileName_;
          if (!(ref instanceof String)) {
            String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
            fileName_ = s;
            return s;
          } else {
            return (String) ref;
          }
        }
        public Builder setFileName(String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          fileName_ = value;
          onChanged();
          return this;
        }
        public Builder clearFileName() {
          bitField0_ = (bitField0_ & ~0x00000002);
          fileName_ = getDefaultInstance().getFileName();
          onChanged();
          return this;
        }
        void setFileName(com.google.protobuf.ByteString value) {
          bitField0_ |= 0x00000002;
          fileName_ = value;
          onChanged();
        }

        // optional int32 permissions = 3;
        private int permissions_ ;
        @Override
        public boolean hasPermissions() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        @Override
        public int getPermissions() {
          return permissions_;
        }
        public Builder setPermissions(int value) {
          bitField0_ |= 0x00000004;
          permissions_ = value;
          onChanged();
          return this;
        }
        public Builder clearPermissions() {
          bitField0_ = (bitField0_ & ~0x00000004);
          permissions_ = 0;
          onChanged();
          return this;
        }

        // required .traces.Module.Segment.Endianness endianness = 4;
        private binparse.trace.TraceSerializer.Module.Segment.Endianness endianness_ = binparse.trace.TraceSerializer.Module.Segment.Endianness.LITTLE;
        @Override
        public boolean hasEndianness() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        @Override
        public binparse.trace.TraceSerializer.Module.Segment.Endianness getEndianness() {
          return endianness_;
        }
        public Builder setEndianness(binparse.trace.TraceSerializer.Module.Segment.Endianness value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000008;
          endianness_ = value;
          onChanged();
          return this;
        }
        public Builder clearEndianness() {
          bitField0_ = (bitField0_ & ~0x00000008);
          endianness_ = binparse.trace.TraceSerializer.Module.Segment.Endianness.LITTLE;
          onChanged();
          return this;
        }

        // required uint64 address = 5;
        private long address_ ;
        @Override
        public boolean hasAddress() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        @Override
        public long getAddress() {
          return address_;
        }
        public Builder setAddress(long value) {
          bitField0_ |= 0x00000010;
          address_ = value;
          onChanged();
          return this;
        }
        public Builder clearAddress() {
          bitField0_ = (bitField0_ & ~0x00000010);
          address_ = 0L;
          onChanged();
          return this;
        }

        // required uint32 size = 6;
        private int size_ ;
        @Override
        public boolean hasSize() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        @Override
        public int getSize() {
          return size_;
        }
        public Builder setSize(int value) {
          bitField0_ |= 0x00000020;
          size_ = value;
          onChanged();
          return this;
        }
        public Builder clearSize() {
          bitField0_ = (bitField0_ & ~0x00000020);
          size_ = 0;
          onChanged();
          return this;
        }

        // optional bytes data = 7;
        private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
        @Override
        public boolean hasData() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        @Override
        public com.google.protobuf.ByteString getData() {
          return data_;
        }
        public Builder setData(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
          data_ = value;
          onChanged();
          return this;
        }
        public Builder clearData() {
          bitField0_ = (bitField0_ & ~0x00000040);
          data_ = getDefaultInstance().getData();
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:traces.Module.Segment)
      }

      static {
        defaultInstance = new Segment(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:traces.Module.Segment)
    }

    // repeated .traces.Module.Segment segments = 1;
    public static final int SEGMENTS_FIELD_NUMBER = 1;
    private java.util.List<binparse.trace.TraceSerializer.Module.Segment> segments_;
    @Override
    public java.util.List<binparse.trace.TraceSerializer.Module.Segment> getSegmentsList() {
      return segments_;
    }
    @Override
    public java.util.List<? extends binparse.trace.TraceSerializer.Module.SegmentOrBuilder>
        getSegmentsOrBuilderList() {
      return segments_;
    }
    @Override
    public int getSegmentsCount() {
      return segments_.size();
    }
    @Override
    public binparse.trace.TraceSerializer.Module.Segment getSegments(int index) {
      return segments_.get(index);
    }
    @Override
    public binparse.trace.TraceSerializer.Module.SegmentOrBuilder getSegmentsOrBuilder(
        int index) {
      return segments_.get(index);
    }

    private void initFields() {
      segments_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getSegmentsCount(); i++) {
        if (!getSegments(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < segments_.size(); i++) {
        output.writeMessage(1, segments_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    @Override
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < segments_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, segments_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static binparse.trace.TraceSerializer.Module parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static binparse.trace.TraceSerializer.Module parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static binparse.trace.TraceSerializer.Module parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static binparse.trace.TraceSerializer.Module parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static binparse.trace.TraceSerializer.Module parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static binparse.trace.TraceSerializer.Module parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static binparse.trace.TraceSerializer.Module parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static binparse.trace.TraceSerializer.Module parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static binparse.trace.TraceSerializer.Module parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static binparse.trace.TraceSerializer.Module parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }

    public static Builder newBuilder() { return Builder.create(); }
    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(binparse.trace.TraceSerializer.Module prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements binparse.trace.TraceSerializer.ModuleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return binparse.trace.TraceSerializer.internal_static_traces_Module_descriptor;
      }

      @Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return binparse.trace.TraceSerializer.internal_static_traces_Module_fieldAccessorTable;
      }

      // Construct using binparse.trace.TraceSerializer.Module.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSegmentsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      @Override
      public Builder clear() {
        super.clear();
        if (segmentsBuilder_ == null) {
          segments_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          segmentsBuilder_.clear();
        }
        return this;
      }

      @Override
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return binparse.trace.TraceSerializer.Module.getDescriptor();
      }

      @Override
      public binparse.trace.TraceSerializer.Module getDefaultInstanceForType() {
        return binparse.trace.TraceSerializer.Module.getDefaultInstance();
      }

      @Override
      public binparse.trace.TraceSerializer.Module build() {
        binparse.trace.TraceSerializer.Module result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      private binparse.trace.TraceSerializer.Module buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        binparse.trace.TraceSerializer.Module result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }

      @Override
      public binparse.trace.TraceSerializer.Module buildPartial() {
        binparse.trace.TraceSerializer.Module result = new binparse.trace.TraceSerializer.Module(this);
        int from_bitField0_ = bitField0_;
        if (segmentsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            segments_ = java.util.Collections.unmodifiableList(segments_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.segments_ = segments_;
        } else {
          result.segments_ = segmentsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof binparse.trace.TraceSerializer.Module) {
          return mergeFrom((binparse.trace.TraceSerializer.Module)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(binparse.trace.TraceSerializer.Module other) {
        if (other == binparse.trace.TraceSerializer.Module.getDefaultInstance()) return this;
        if (segmentsBuilder_ == null) {
          if (!other.segments_.isEmpty()) {
            if (segments_.isEmpty()) {
              segments_ = other.segments_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureSegmentsIsMutable();
              segments_.addAll(other.segments_);
            }
            onChanged();
          }
        } else {
          if (!other.segments_.isEmpty()) {
            if (segmentsBuilder_.isEmpty()) {
              segmentsBuilder_.dispose();
              segmentsBuilder_ = null;
              segments_ = other.segments_;
              bitField0_ = (bitField0_ & ~0x00000001);
              segmentsBuilder_ =
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSegmentsFieldBuilder() : null;
            } else {
              segmentsBuilder_.addAllMessages(other.segments_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      @Override
      public final boolean isInitialized() {
        for (int i = 0; i < getSegmentsCount(); i++) {
          if (!getSegments(i).isInitialized()) {

            return false;
          }
        }
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              binparse.trace.TraceSerializer.Module.Segment.Builder subBuilder = binparse.trace.TraceSerializer.Module.Segment.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addSegments(subBuilder.buildPartial());
              break;
            }
          }
        }
      }

      private int bitField0_;

      // repeated .traces.Module.Segment segments = 1;
      private java.util.List<binparse.trace.TraceSerializer.Module.Segment> segments_ =
        java.util.Collections.emptyList();
      private void ensureSegmentsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          segments_ = new java.util.ArrayList<binparse.trace.TraceSerializer.Module.Segment>(segments_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          binparse.trace.TraceSerializer.Module.Segment, binparse.trace.TraceSerializer.Module.Segment.Builder, binparse.trace.TraceSerializer.Module.SegmentOrBuilder> segmentsBuilder_;

      @Override
      public java.util.List<binparse.trace.TraceSerializer.Module.Segment> getSegmentsList() {
        if (segmentsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(segments_);
        } else {
          return segmentsBuilder_.getMessageList();
        }
      }
      @Override
      public int getSegmentsCount() {
        if (segmentsBuilder_ == null) {
          return segments_.size();
        } else {
          return segmentsBuilder_.getCount();
        }
      }
      @Override
      public binparse.trace.TraceSerializer.Module.Segment getSegments(int index) {
        if (segmentsBuilder_ == null) {
          return segments_.get(index);
        } else {
          return segmentsBuilder_.getMessage(index);
        }
      }
      public Builder setSegments(
          int index, binparse.trace.TraceSerializer.Module.Segment value) {
        if (segmentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSegmentsIsMutable();
          segments_.set(index, value);
          onChanged();
        } else {
          segmentsBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setSegments(
          int index, binparse.trace.TraceSerializer.Module.Segment.Builder builderForValue) {
        if (segmentsBuilder_ == null) {
          ensureSegmentsIsMutable();
          segments_.set(index, builderForValue.build());
          onChanged();
        } else {
          segmentsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addSegments(binparse.trace.TraceSerializer.Module.Segment value) {
        if (segmentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSegmentsIsMutable();
          segments_.add(value);
          onChanged();
        } else {
          segmentsBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addSegments(
          int index, binparse.trace.TraceSerializer.Module.Segment value) {
        if (segmentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSegmentsIsMutable();
          segments_.add(index, value);
          onChanged();
        } else {
          segmentsBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addSegments(
          binparse.trace.TraceSerializer.Module.Segment.Builder builderForValue) {
        if (segmentsBuilder_ == null) {
          ensureSegmentsIsMutable();
          segments_.add(builderForValue.build());
          onChanged();
        } else {
          segmentsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addSegments(
          int index, binparse.trace.TraceSerializer.Module.Segment.Builder builderForValue) {
        if (segmentsBuilder_ == null) {
          ensureSegmentsIsMutable();
          segments_.add(index, builderForValue.build());
          onChanged();
        } else {
          segmentsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllSegments(
          java.lang.Iterable<? extends binparse.trace.TraceSerializer.Module.Segment> values) {
        if (segmentsBuilder_ == null) {
          ensureSegmentsIsMutable();
          super.addAll(values, segments_);
          onChanged();
        } else {
          segmentsBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearSegments() {
        if (segmentsBuilder_ == null) {
          segments_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          segmentsBuilder_.clear();
        }
        return this;
      }
      public Builder removeSegments(int index) {
        if (segmentsBuilder_ == null) {
          ensureSegmentsIsMutable();
          segments_.remove(index);
          onChanged();
        } else {
          segmentsBuilder_.remove(index);
        }
        return this;
      }
      public binparse.trace.TraceSerializer.Module.Segment.Builder getSegmentsBuilder(
          int index) {
        return getSegmentsFieldBuilder().getBuilder(index);
      }
      @Override
      public binparse.trace.TraceSerializer.Module.SegmentOrBuilder getSegmentsOrBuilder(
          int index) {
        if (segmentsBuilder_ == null) {
          return segments_.get(index);  } else {
          return segmentsBuilder_.getMessageOrBuilder(index);
        }
      }
      @Override
      public java.util.List<? extends binparse.trace.TraceSerializer.Module.SegmentOrBuilder>
           getSegmentsOrBuilderList() {
        if (segmentsBuilder_ != null) {
          return segmentsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(segments_);
        }
      }
      public binparse.trace.TraceSerializer.Module.Segment.Builder addSegmentsBuilder() {
        return getSegmentsFieldBuilder().addBuilder(
            binparse.trace.TraceSerializer.Module.Segment.getDefaultInstance());
      }
      public binparse.trace.TraceSerializer.Module.Segment.Builder addSegmentsBuilder(
          int index) {
        return getSegmentsFieldBuilder().addBuilder(
            index, binparse.trace.TraceSerializer.Module.Segment.getDefaultInstance());
      }
      public java.util.List<binparse.trace.TraceSerializer.Module.Segment.Builder>
           getSegmentsBuilderList() {
        return getSegmentsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          binparse.trace.TraceSerializer.Module.Segment, binparse.trace.TraceSerializer.Module.Segment.Builder, binparse.trace.TraceSerializer.Module.SegmentOrBuilder>
          getSegmentsFieldBuilder() {
        if (segmentsBuilder_ == null) {
          segmentsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              binparse.trace.TraceSerializer.Module.Segment, binparse.trace.TraceSerializer.Module.Segment.Builder, binparse.trace.TraceSerializer.Module.SegmentOrBuilder>(
                  segments_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          segments_ = null;
        }
        return segmentsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:traces.Module)
    }

    static {
      defaultInstance = new Module(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:traces.Module)
  }

  public interface CPUStateOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .traces.CPUState.Register registers = 1;
    java.util.List<binparse.trace.TraceSerializer.CPUState.Register>
        getRegistersList();
    binparse.trace.TraceSerializer.CPUState.Register getRegisters(int index);
    int getRegistersCount();
    java.util.List<? extends binparse.trace.TraceSerializer.CPUState.RegisterOrBuilder>
        getRegistersOrBuilderList();
    binparse.trace.TraceSerializer.CPUState.RegisterOrBuilder getRegistersOrBuilder(
        int index);
  }
  public static final class CPUState extends
      com.google.protobuf.GeneratedMessage
      implements CPUStateOrBuilder {
    // Use CPUState.newBuilder() to construct.
    private CPUState(Builder builder) {
      super(builder);
    }
    private CPUState(boolean noInit) {}

    private static final CPUState defaultInstance;
    public static CPUState getDefaultInstance() {
      return defaultInstance;
    }

    @Override
    public CPUState getDefaultInstanceForType() {
      return defaultInstance;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return binparse.trace.TraceSerializer.internal_static_traces_CPUState_descriptor;
    }

    @Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return binparse.trace.TraceSerializer.internal_static_traces_CPUState_fieldAccessorTable;
    }

    public interface RegisterOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // required string name = 1;
      boolean hasName();
      String getName();

      // required uint64 value = 2;
      boolean hasValue();
      long getValue();
    }
    public static final class Register extends
        com.google.protobuf.GeneratedMessage
        implements RegisterOrBuilder {
      // Use Register.newBuilder() to construct.
      private Register(Builder builder) {
        super(builder);
      }
      private Register(boolean noInit) {}

      private static final Register defaultInstance;
      public static Register getDefaultInstance() {
        return defaultInstance;
      }

      @Override
      public Register getDefaultInstanceForType() {
        return defaultInstance;
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return binparse.trace.TraceSerializer.internal_static_traces_CPUState_Register_descriptor;
      }

      @Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return binparse.trace.TraceSerializer.internal_static_traces_CPUState_Register_fieldAccessorTable;
      }

      private int bitField0_;
      // required string name = 1;
      public static final int NAME_FIELD_NUMBER = 1;
      private java.lang.Object name_;
      @Override
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      @Override
      public String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          return (String) ref;
        } else {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (com.google.protobuf.Internal.isValidUtf8(bs)) {
            name_ = s;
          }
          return s;
        }
      }
      private com.google.protobuf.ByteString getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8((String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // required uint64 value = 2;
      public static final int VALUE_FIELD_NUMBER = 2;
      private long value_;
      @Override
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      @Override
      public long getValue() {
        return value_;
      }

      private void initFields() {
        name_ = "";
        value_ = 0L;
      }
      private byte memoizedIsInitialized = -1;
      @Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasName()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasValue()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      @Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getNameBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt64(2, value_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      @Override
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getNameBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(2, value_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static binparse.trace.TraceSerializer.CPUState.Register parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static binparse.trace.TraceSerializer.CPUState.Register parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static binparse.trace.TraceSerializer.CPUState.Register parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static binparse.trace.TraceSerializer.CPUState.Register parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static binparse.trace.TraceSerializer.CPUState.Register parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static binparse.trace.TraceSerializer.CPUState.Register parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static binparse.trace.TraceSerializer.CPUState.Register parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static binparse.trace.TraceSerializer.CPUState.Register parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static binparse.trace.TraceSerializer.CPUState.Register parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static binparse.trace.TraceSerializer.CPUState.Register parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }

      public static Builder newBuilder() { return Builder.create(); }
      @Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(binparse.trace.TraceSerializer.CPUState.Register prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      @Override
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements binparse.trace.TraceSerializer.CPUState.RegisterOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return binparse.trace.TraceSerializer.internal_static_traces_CPUState_Register_descriptor;
        }

        @Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return binparse.trace.TraceSerializer.internal_static_traces_CPUState_Register_fieldAccessorTable;
        }

        // Construct using binparse.trace.TraceSerializer.CPUState.Register.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        @Override
        public Builder clear() {
          super.clear();
          name_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          value_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        @Override
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        @Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return binparse.trace.TraceSerializer.CPUState.Register.getDescriptor();
        }

        @Override
        public binparse.trace.TraceSerializer.CPUState.Register getDefaultInstanceForType() {
          return binparse.trace.TraceSerializer.CPUState.Register.getDefaultInstance();
        }

        @Override
        public binparse.trace.TraceSerializer.CPUState.Register build() {
          binparse.trace.TraceSerializer.CPUState.Register result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        private binparse.trace.TraceSerializer.CPUState.Register buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          binparse.trace.TraceSerializer.CPUState.Register result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }

        @Override
        public binparse.trace.TraceSerializer.CPUState.Register buildPartial() {
          binparse.trace.TraceSerializer.CPUState.Register result = new binparse.trace.TraceSerializer.CPUState.Register(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.name_ = name_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.value_ = value_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof binparse.trace.TraceSerializer.CPUState.Register) {
            return mergeFrom((binparse.trace.TraceSerializer.CPUState.Register)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(binparse.trace.TraceSerializer.CPUState.Register other) {
          if (other == binparse.trace.TraceSerializer.CPUState.Register.getDefaultInstance()) return this;
          if (other.hasName()) {
            setName(other.getName());
          }
          if (other.hasValue()) {
            setValue(other.getValue());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        @Override
        public final boolean isInitialized() {
          if (!hasName()) {

            return false;
          }
          if (!hasValue()) {

            return false;
          }
          return true;
        }

        @Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  onChanged();
                  return this;
                }
                break;
              }
              case 10: {
                bitField0_ |= 0x00000001;
                name_ = input.readBytes();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                value_ = input.readUInt64();
                break;
              }
            }
          }
        }

        private int bitField0_;

        // required string name = 1;
        private java.lang.Object name_ = "";
        @Override
        public boolean hasName() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        @Override
        public String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof String)) {
            String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
            name_ = s;
            return s;
          } else {
            return (String) ref;
          }
        }
        public Builder setName(String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }
        public Builder clearName() {
          bitField0_ = (bitField0_ & ~0x00000001);
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        void setName(com.google.protobuf.ByteString value) {
          bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
        }

        // required uint64 value = 2;
        private long value_ ;
        @Override
        public boolean hasValue() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        @Override
        public long getValue() {
          return value_;
        }
        public Builder setValue(long value) {
          bitField0_ |= 0x00000002;
          value_ = value;
          onChanged();
          return this;
        }
        public Builder clearValue() {
          bitField0_ = (bitField0_ & ~0x00000002);
          value_ = 0L;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:traces.CPUState.Register)
      }

      static {
        defaultInstance = new Register(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:traces.CPUState.Register)
    }

    // repeated .traces.CPUState.Register registers = 1;
    public static final int REGISTERS_FIELD_NUMBER = 1;
    private java.util.List<binparse.trace.TraceSerializer.CPUState.Register> registers_;
    @Override
    public java.util.List<binparse.trace.TraceSerializer.CPUState.Register> getRegistersList() {
      return registers_;
    }
    @Override
    public java.util.List<? extends binparse.trace.TraceSerializer.CPUState.RegisterOrBuilder>
        getRegistersOrBuilderList() {
      return registers_;
    }
    @Override
    public int getRegistersCount() {
      return registers_.size();
    }
    @Override
    public binparse.trace.TraceSerializer.CPUState.Register getRegisters(int index) {
      return registers_.get(index);
    }
    @Override
    public binparse.trace.TraceSerializer.CPUState.RegisterOrBuilder getRegistersOrBuilder(
        int index) {
      return registers_.get(index);
    }

    private void initFields() {
      registers_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getRegistersCount(); i++) {
        if (!getRegisters(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < registers_.size(); i++) {
        output.writeMessage(1, registers_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    @Override
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < registers_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, registers_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static binparse.trace.TraceSerializer.CPUState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static binparse.trace.TraceSerializer.CPUState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static binparse.trace.TraceSerializer.CPUState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static binparse.trace.TraceSerializer.CPUState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static binparse.trace.TraceSerializer.CPUState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static binparse.trace.TraceSerializer.CPUState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static binparse.trace.TraceSerializer.CPUState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static binparse.trace.TraceSerializer.CPUState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static binparse.trace.TraceSerializer.CPUState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static binparse.trace.TraceSerializer.CPUState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }

    public static Builder newBuilder() { return Builder.create(); }
    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(binparse.trace.TraceSerializer.CPUState prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements binparse.trace.TraceSerializer.CPUStateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return binparse.trace.TraceSerializer.internal_static_traces_CPUState_descriptor;
      }

      @Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return binparse.trace.TraceSerializer.internal_static_traces_CPUState_fieldAccessorTable;
      }

      // Construct using binparse.trace.TraceSerializer.CPUState.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRegistersFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      @Override
      public Builder clear() {
        super.clear();
        if (registersBuilder_ == null) {
          registers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          registersBuilder_.clear();
        }
        return this;
      }

      @Override
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return binparse.trace.TraceSerializer.CPUState.getDescriptor();
      }

      @Override
      public binparse.trace.TraceSerializer.CPUState getDefaultInstanceForType() {
        return binparse.trace.TraceSerializer.CPUState.getDefaultInstance();
      }

      @Override
      public binparse.trace.TraceSerializer.CPUState build() {
        binparse.trace.TraceSerializer.CPUState result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      private binparse.trace.TraceSerializer.CPUState buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        binparse.trace.TraceSerializer.CPUState result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }

      @Override
      public binparse.trace.TraceSerializer.CPUState buildPartial() {
        binparse.trace.TraceSerializer.CPUState result = new binparse.trace.TraceSerializer.CPUState(this);
        int from_bitField0_ = bitField0_;
        if (registersBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            registers_ = java.util.Collections.unmodifiableList(registers_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.registers_ = registers_;
        } else {
          result.registers_ = registersBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof binparse.trace.TraceSerializer.CPUState) {
          return mergeFrom((binparse.trace.TraceSerializer.CPUState)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(binparse.trace.TraceSerializer.CPUState other) {
        if (other == binparse.trace.TraceSerializer.CPUState.getDefaultInstance()) return this;
        if (registersBuilder_ == null) {
          if (!other.registers_.isEmpty()) {
            if (registers_.isEmpty()) {
              registers_ = other.registers_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureRegistersIsMutable();
              registers_.addAll(other.registers_);
            }
            onChanged();
          }
        } else {
          if (!other.registers_.isEmpty()) {
            if (registersBuilder_.isEmpty()) {
              registersBuilder_.dispose();
              registersBuilder_ = null;
              registers_ = other.registers_;
              bitField0_ = (bitField0_ & ~0x00000001);
              registersBuilder_ =
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRegistersFieldBuilder() : null;
            } else {
              registersBuilder_.addAllMessages(other.registers_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      @Override
      public final boolean isInitialized() {
        for (int i = 0; i < getRegistersCount(); i++) {
          if (!getRegisters(i).isInitialized()) {

            return false;
          }
        }
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              binparse.trace.TraceSerializer.CPUState.Register.Builder subBuilder = binparse.trace.TraceSerializer.CPUState.Register.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addRegisters(subBuilder.buildPartial());
              break;
            }
          }
        }
      }

      private int bitField0_;

      // repeated .traces.CPUState.Register registers = 1;
      private java.util.List<binparse.trace.TraceSerializer.CPUState.Register> registers_ =
        java.util.Collections.emptyList();
      private void ensureRegistersIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          registers_ = new java.util.ArrayList<binparse.trace.TraceSerializer.CPUState.Register>(registers_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          binparse.trace.TraceSerializer.CPUState.Register, binparse.trace.TraceSerializer.CPUState.Register.Builder, binparse.trace.TraceSerializer.CPUState.RegisterOrBuilder> registersBuilder_;

      @Override
      public java.util.List<binparse.trace.TraceSerializer.CPUState.Register> getRegistersList() {
        if (registersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(registers_);
        } else {
          return registersBuilder_.getMessageList();
        }
      }
      @Override
      public int getRegistersCount() {
        if (registersBuilder_ == null) {
          return registers_.size();
        } else {
          return registersBuilder_.getCount();
        }
      }
      @Override
      public binparse.trace.TraceSerializer.CPUState.Register getRegisters(int index) {
        if (registersBuilder_ == null) {
          return registers_.get(index);
        } else {
          return registersBuilder_.getMessage(index);
        }
      }
      public Builder setRegisters(
          int index, binparse.trace.TraceSerializer.CPUState.Register value) {
        if (registersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRegistersIsMutable();
          registers_.set(index, value);
          onChanged();
        } else {
          registersBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setRegisters(
          int index, binparse.trace.TraceSerializer.CPUState.Register.Builder builderForValue) {
        if (registersBuilder_ == null) {
          ensureRegistersIsMutable();
          registers_.set(index, builderForValue.build());
          onChanged();
        } else {
          registersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addRegisters(binparse.trace.TraceSerializer.CPUState.Register value) {
        if (registersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRegistersIsMutable();
          registers_.add(value);
          onChanged();
        } else {
          registersBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addRegisters(
          int index, binparse.trace.TraceSerializer.CPUState.Register value) {
        if (registersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRegistersIsMutable();
          registers_.add(index, value);
          onChanged();
        } else {
          registersBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addRegisters(
          binparse.trace.TraceSerializer.CPUState.Register.Builder builderForValue) {
        if (registersBuilder_ == null) {
          ensureRegistersIsMutable();
          registers_.add(builderForValue.build());
          onChanged();
        } else {
          registersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addRegisters(
          int index, binparse.trace.TraceSerializer.CPUState.Register.Builder builderForValue) {
        if (registersBuilder_ == null) {
          ensureRegistersIsMutable();
          registers_.add(index, builderForValue.build());
          onChanged();
        } else {
          registersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllRegisters(
          java.lang.Iterable<? extends binparse.trace.TraceSerializer.CPUState.Register> values) {
        if (registersBuilder_ == null) {
          ensureRegistersIsMutable();
          super.addAll(values, registers_);
          onChanged();
        } else {
          registersBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearRegisters() {
        if (registersBuilder_ == null) {
          registers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          registersBuilder_.clear();
        }
        return this;
      }
      public Builder removeRegisters(int index) {
        if (registersBuilder_ == null) {
          ensureRegistersIsMutable();
          registers_.remove(index);
          onChanged();
        } else {
          registersBuilder_.remove(index);
        }
        return this;
      }
      public binparse.trace.TraceSerializer.CPUState.Register.Builder getRegistersBuilder(
          int index) {
        return getRegistersFieldBuilder().getBuilder(index);
      }
      @Override
      public binparse.trace.TraceSerializer.CPUState.RegisterOrBuilder getRegistersOrBuilder(
          int index) {
        if (registersBuilder_ == null) {
          return registers_.get(index);  } else {
          return registersBuilder_.getMessageOrBuilder(index);
        }
      }
      @Override
      public java.util.List<? extends binparse.trace.TraceSerializer.CPUState.RegisterOrBuilder>
           getRegistersOrBuilderList() {
        if (registersBuilder_ != null) {
          return registersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(registers_);
        }
      }
      public binparse.trace.TraceSerializer.CPUState.Register.Builder addRegistersBuilder() {
        return getRegistersFieldBuilder().addBuilder(
            binparse.trace.TraceSerializer.CPUState.Register.getDefaultInstance());
      }
      public binparse.trace.TraceSerializer.CPUState.Register.Builder addRegistersBuilder(
          int index) {
        return getRegistersFieldBuilder().addBuilder(
            index, binparse.trace.TraceSerializer.CPUState.Register.getDefaultInstance());
      }
      public java.util.List<binparse.trace.TraceSerializer.CPUState.Register.Builder>
           getRegistersBuilderList() {
        return getRegistersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          binparse.trace.TraceSerializer.CPUState.Register, binparse.trace.TraceSerializer.CPUState.Register.Builder, binparse.trace.TraceSerializer.CPUState.RegisterOrBuilder>
          getRegistersFieldBuilder() {
        if (registersBuilder_ == null) {
          registersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              binparse.trace.TraceSerializer.CPUState.Register, binparse.trace.TraceSerializer.CPUState.Register.Builder, binparse.trace.TraceSerializer.CPUState.RegisterOrBuilder>(
                  registers_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          registers_ = null;
        }
        return registersBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:traces.CPUState)
    }

    static {
      defaultInstance = new CPUState(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:traces.CPUState)
  }

  public interface ControlFlowTraceOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .traces.ControlFlowTrace.ControlFlow jumps = 1;
    java.util.List<binparse.trace.TraceSerializer.ControlFlowTrace.ControlFlow>
        getJumpsList();
    binparse.trace.TraceSerializer.ControlFlowTrace.ControlFlow getJumps(int index);
    int getJumpsCount();
    java.util.List<? extends binparse.trace.TraceSerializer.ControlFlowTrace.ControlFlowOrBuilder>
        getJumpsOrBuilderList();
    binparse.trace.TraceSerializer.ControlFlowTrace.ControlFlowOrBuilder getJumpsOrBuilder(
        int index);
  }
  public static final class ControlFlowTrace extends
      com.google.protobuf.GeneratedMessage
      implements ControlFlowTraceOrBuilder {
    // Use ControlFlowTrace.newBuilder() to construct.
    private ControlFlowTrace(Builder builder) {
      super(builder);
    }
    private ControlFlowTrace(boolean noInit) {}

    private static final ControlFlowTrace defaultInstance;
    public static ControlFlowTrace getDefaultInstance() {
      return defaultInstance;
    }

    @Override
    public ControlFlowTrace getDefaultInstanceForType() {
      return defaultInstance;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return binparse.trace.TraceSerializer.internal_static_traces_ControlFlowTrace_descriptor;
    }

    @Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return binparse.trace.TraceSerializer.internal_static_traces_ControlFlowTrace_fieldAccessorTable;
    }

    public interface ControlFlowOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // required uint64 currentPC = 1;
      boolean hasCurrentPC();
      long getCurrentPC();

      // required uint64 nextPC = 2;
      boolean hasNextPC();
      long getNextPC();

      // required bool jumpConditionWas = 3;
      boolean hasJumpConditionWas();
      boolean getJumpConditionWas();
    }
    public static final class ControlFlow extends
        com.google.protobuf.GeneratedMessage
        implements ControlFlowOrBuilder {
      // Use ControlFlow.newBuilder() to construct.
      private ControlFlow(Builder builder) {
        super(builder);
      }
      private ControlFlow(boolean noInit) {}

      private static final ControlFlow defaultInstance;
      public static ControlFlow getDefaultInstance() {
        return defaultInstance;
      }

      @Override
      public ControlFlow getDefaultInstanceForType() {
        return defaultInstance;
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return binparse.trace.TraceSerializer.internal_static_traces_ControlFlowTrace_ControlFlow_descriptor;
      }

      @Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return binparse.trace.TraceSerializer.internal_static_traces_ControlFlowTrace_ControlFlow_fieldAccessorTable;
      }

      private int bitField0_;
      // required uint64 currentPC = 1;
      public static final int CURRENTPC_FIELD_NUMBER = 1;
      private long currentPC_;
      @Override
      public boolean hasCurrentPC() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      @Override
      public long getCurrentPC() {
        return currentPC_;
      }

      // required uint64 nextPC = 2;
      public static final int NEXTPC_FIELD_NUMBER = 2;
      private long nextPC_;
      @Override
      public boolean hasNextPC() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      @Override
      public long getNextPC() {
        return nextPC_;
      }

      // required bool jumpConditionWas = 3;
      public static final int JUMPCONDITIONWAS_FIELD_NUMBER = 3;
      private boolean jumpConditionWas_;
      @Override
      public boolean hasJumpConditionWas() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      @Override
      public boolean getJumpConditionWas() {
        return jumpConditionWas_;
      }

      private void initFields() {
        currentPC_ = 0L;
        nextPC_ = 0L;
        jumpConditionWas_ = false;
      }
      private byte memoizedIsInitialized = -1;
      @Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasCurrentPC()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasNextPC()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasJumpConditionWas()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      @Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt64(1, currentPC_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt64(2, nextPC_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeBool(3, jumpConditionWas_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      @Override
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(1, currentPC_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(2, nextPC_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(3, jumpConditionWas_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static binparse.trace.TraceSerializer.ControlFlowTrace.ControlFlow parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static binparse.trace.TraceSerializer.ControlFlowTrace.ControlFlow parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static binparse.trace.TraceSerializer.ControlFlowTrace.ControlFlow parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static binparse.trace.TraceSerializer.ControlFlowTrace.ControlFlow parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static binparse.trace.TraceSerializer.ControlFlowTrace.ControlFlow parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static binparse.trace.TraceSerializer.ControlFlowTrace.ControlFlow parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static binparse.trace.TraceSerializer.ControlFlowTrace.ControlFlow parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static binparse.trace.TraceSerializer.ControlFlowTrace.ControlFlow parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static binparse.trace.TraceSerializer.ControlFlowTrace.ControlFlow parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static binparse.trace.TraceSerializer.ControlFlowTrace.ControlFlow parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }

      public static Builder newBuilder() { return Builder.create(); }
      @Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(binparse.trace.TraceSerializer.ControlFlowTrace.ControlFlow prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      @Override
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements binparse.trace.TraceSerializer.ControlFlowTrace.ControlFlowOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return binparse.trace.TraceSerializer.internal_static_traces_ControlFlowTrace_ControlFlow_descriptor;
        }

        @Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return binparse.trace.TraceSerializer.internal_static_traces_ControlFlowTrace_ControlFlow_fieldAccessorTable;
        }

        // Construct using binparse.trace.TraceSerializer.ControlFlowTrace.ControlFlow.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        @Override
        public Builder clear() {
          super.clear();
          currentPC_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000001);
          nextPC_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000002);
          jumpConditionWas_ = false;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        @Override
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        @Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return binparse.trace.TraceSerializer.ControlFlowTrace.ControlFlow.getDescriptor();
        }

        @Override
        public binparse.trace.TraceSerializer.ControlFlowTrace.ControlFlow getDefaultInstanceForType() {
          return binparse.trace.TraceSerializer.ControlFlowTrace.ControlFlow.getDefaultInstance();
        }

        @Override
        public binparse.trace.TraceSerializer.ControlFlowTrace.ControlFlow build() {
          binparse.trace.TraceSerializer.ControlFlowTrace.ControlFlow result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        private binparse.trace.TraceSerializer.ControlFlowTrace.ControlFlow buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          binparse.trace.TraceSerializer.ControlFlowTrace.ControlFlow result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }

        @Override
        public binparse.trace.TraceSerializer.ControlFlowTrace.ControlFlow buildPartial() {
          binparse.trace.TraceSerializer.ControlFlowTrace.ControlFlow result = new binparse.trace.TraceSerializer.ControlFlowTrace.ControlFlow(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.currentPC_ = currentPC_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.nextPC_ = nextPC_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.jumpConditionWas_ = jumpConditionWas_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof binparse.trace.TraceSerializer.ControlFlowTrace.ControlFlow) {
            return mergeFrom((binparse.trace.TraceSerializer.ControlFlowTrace.ControlFlow)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(binparse.trace.TraceSerializer.ControlFlowTrace.ControlFlow other) {
          if (other == binparse.trace.TraceSerializer.ControlFlowTrace.ControlFlow.getDefaultInstance()) return this;
          if (other.hasCurrentPC()) {
            setCurrentPC(other.getCurrentPC());
          }
          if (other.hasNextPC()) {
            setNextPC(other.getNextPC());
          }
          if (other.hasJumpConditionWas()) {
            setJumpConditionWas(other.getJumpConditionWas());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        @Override
        public final boolean isInitialized() {
          if (!hasCurrentPC()) {

            return false;
          }
          if (!hasNextPC()) {

            return false;
          }
          if (!hasJumpConditionWas()) {

            return false;
          }
          return true;
        }

        @Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  onChanged();
                  return this;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                currentPC_ = input.readUInt64();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                nextPC_ = input.readUInt64();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                jumpConditionWas_ = input.readBool();
                break;
              }
            }
          }
        }

        private int bitField0_;

        // required uint64 currentPC = 1;
        private long currentPC_ ;
        @Override
        public boolean hasCurrentPC() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        @Override
        public long getCurrentPC() {
          return currentPC_;
        }
        public Builder setCurrentPC(long value) {
          bitField0_ |= 0x00000001;
          currentPC_ = value;
          onChanged();
          return this;
        }
        public Builder clearCurrentPC() {
          bitField0_ = (bitField0_ & ~0x00000001);
          currentPC_ = 0L;
          onChanged();
          return this;
        }

        // required uint64 nextPC = 2;
        private long nextPC_ ;
        @Override
        public boolean hasNextPC() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        @Override
        public long getNextPC() {
          return nextPC_;
        }
        public Builder setNextPC(long value) {
          bitField0_ |= 0x00000002;
          nextPC_ = value;
          onChanged();
          return this;
        }
        public Builder clearNextPC() {
          bitField0_ = (bitField0_ & ~0x00000002);
          nextPC_ = 0L;
          onChanged();
          return this;
        }

        // required bool jumpConditionWas = 3;
        private boolean jumpConditionWas_ ;
        @Override
        public boolean hasJumpConditionWas() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        @Override
        public boolean getJumpConditionWas() {
          return jumpConditionWas_;
        }
        public Builder setJumpConditionWas(boolean value) {
          bitField0_ |= 0x00000004;
          jumpConditionWas_ = value;
          onChanged();
          return this;
        }
        public Builder clearJumpConditionWas() {
          bitField0_ = (bitField0_ & ~0x00000004);
          jumpConditionWas_ = false;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:traces.ControlFlowTrace.ControlFlow)
      }

      static {
        defaultInstance = new ControlFlow(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:traces.ControlFlowTrace.ControlFlow)
    }

    // repeated .traces.ControlFlowTrace.ControlFlow jumps = 1;
    public static final int JUMPS_FIELD_NUMBER = 1;
    private java.util.List<binparse.trace.TraceSerializer.ControlFlowTrace.ControlFlow> jumps_;
    @Override
    public java.util.List<binparse.trace.TraceSerializer.ControlFlowTrace.ControlFlow> getJumpsList() {
      return jumps_;
    }
    @Override
    public java.util.List<? extends binparse.trace.TraceSerializer.ControlFlowTrace.ControlFlowOrBuilder>
        getJumpsOrBuilderList() {
      return jumps_;
    }
    @Override
    public int getJumpsCount() {
      return jumps_.size();
    }
    @Override
    public binparse.trace.TraceSerializer.ControlFlowTrace.ControlFlow getJumps(int index) {
      return jumps_.get(index);
    }
    @Override
    public binparse.trace.TraceSerializer.ControlFlowTrace.ControlFlowOrBuilder getJumpsOrBuilder(
        int index) {
      return jumps_.get(index);
    }

    private void initFields() {
      jumps_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getJumpsCount(); i++) {
        if (!getJumps(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < jumps_.size(); i++) {
        output.writeMessage(1, jumps_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    @Override
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < jumps_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, jumps_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static binparse.trace.TraceSerializer.ControlFlowTrace parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static binparse.trace.TraceSerializer.ControlFlowTrace parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static binparse.trace.TraceSerializer.ControlFlowTrace parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static binparse.trace.TraceSerializer.ControlFlowTrace parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static binparse.trace.TraceSerializer.ControlFlowTrace parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static binparse.trace.TraceSerializer.ControlFlowTrace parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static binparse.trace.TraceSerializer.ControlFlowTrace parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static binparse.trace.TraceSerializer.ControlFlowTrace parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static binparse.trace.TraceSerializer.ControlFlowTrace parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static binparse.trace.TraceSerializer.ControlFlowTrace parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }

    public static Builder newBuilder() { return Builder.create(); }
    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(binparse.trace.TraceSerializer.ControlFlowTrace prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements binparse.trace.TraceSerializer.ControlFlowTraceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return binparse.trace.TraceSerializer.internal_static_traces_ControlFlowTrace_descriptor;
      }

      @Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return binparse.trace.TraceSerializer.internal_static_traces_ControlFlowTrace_fieldAccessorTable;
      }

      // Construct using binparse.trace.TraceSerializer.ControlFlowTrace.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getJumpsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      @Override
      public Builder clear() {
        super.clear();
        if (jumpsBuilder_ == null) {
          jumps_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          jumpsBuilder_.clear();
        }
        return this;
      }

      @Override
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return binparse.trace.TraceSerializer.ControlFlowTrace.getDescriptor();
      }

      @Override
      public binparse.trace.TraceSerializer.ControlFlowTrace getDefaultInstanceForType() {
        return binparse.trace.TraceSerializer.ControlFlowTrace.getDefaultInstance();
      }

      @Override
      public binparse.trace.TraceSerializer.ControlFlowTrace build() {
        binparse.trace.TraceSerializer.ControlFlowTrace result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      private binparse.trace.TraceSerializer.ControlFlowTrace buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        binparse.trace.TraceSerializer.ControlFlowTrace result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }

      @Override
      public binparse.trace.TraceSerializer.ControlFlowTrace buildPartial() {
        binparse.trace.TraceSerializer.ControlFlowTrace result = new binparse.trace.TraceSerializer.ControlFlowTrace(this);
        int from_bitField0_ = bitField0_;
        if (jumpsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            jumps_ = java.util.Collections.unmodifiableList(jumps_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.jumps_ = jumps_;
        } else {
          result.jumps_ = jumpsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof binparse.trace.TraceSerializer.ControlFlowTrace) {
          return mergeFrom((binparse.trace.TraceSerializer.ControlFlowTrace)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(binparse.trace.TraceSerializer.ControlFlowTrace other) {
        if (other == binparse.trace.TraceSerializer.ControlFlowTrace.getDefaultInstance()) return this;
        if (jumpsBuilder_ == null) {
          if (!other.jumps_.isEmpty()) {
            if (jumps_.isEmpty()) {
              jumps_ = other.jumps_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureJumpsIsMutable();
              jumps_.addAll(other.jumps_);
            }
            onChanged();
          }
        } else {
          if (!other.jumps_.isEmpty()) {
            if (jumpsBuilder_.isEmpty()) {
              jumpsBuilder_.dispose();
              jumpsBuilder_ = null;
              jumps_ = other.jumps_;
              bitField0_ = (bitField0_ & ~0x00000001);
              jumpsBuilder_ =
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getJumpsFieldBuilder() : null;
            } else {
              jumpsBuilder_.addAllMessages(other.jumps_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      @Override
      public final boolean isInitialized() {
        for (int i = 0; i < getJumpsCount(); i++) {
          if (!getJumps(i).isInitialized()) {

            return false;
          }
        }
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              binparse.trace.TraceSerializer.ControlFlowTrace.ControlFlow.Builder subBuilder = binparse.trace.TraceSerializer.ControlFlowTrace.ControlFlow.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addJumps(subBuilder.buildPartial());
              break;
            }
          }
        }
      }

      private int bitField0_;

      // repeated .traces.ControlFlowTrace.ControlFlow jumps = 1;
      private java.util.List<binparse.trace.TraceSerializer.ControlFlowTrace.ControlFlow> jumps_ =
        java.util.Collections.emptyList();
      private void ensureJumpsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          jumps_ = new java.util.ArrayList<binparse.trace.TraceSerializer.ControlFlowTrace.ControlFlow>(jumps_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          binparse.trace.TraceSerializer.ControlFlowTrace.ControlFlow, binparse.trace.TraceSerializer.ControlFlowTrace.ControlFlow.Builder, binparse.trace.TraceSerializer.ControlFlowTrace.ControlFlowOrBuilder> jumpsBuilder_;

      @Override
      public java.util.List<binparse.trace.TraceSerializer.ControlFlowTrace.ControlFlow> getJumpsList() {
        if (jumpsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(jumps_);
        } else {
          return jumpsBuilder_.getMessageList();
        }
      }
      @Override
      public int getJumpsCount() {
        if (jumpsBuilder_ == null) {
          return jumps_.size();
        } else {
          return jumpsBuilder_.getCount();
        }
      }
      @Override
      public binparse.trace.TraceSerializer.ControlFlowTrace.ControlFlow getJumps(int index) {
        if (jumpsBuilder_ == null) {
          return jumps_.get(index);
        } else {
          return jumpsBuilder_.getMessage(index);
        }
      }
      public Builder setJumps(
          int index, binparse.trace.TraceSerializer.ControlFlowTrace.ControlFlow value) {
        if (jumpsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureJumpsIsMutable();
          jumps_.set(index, value);
          onChanged();
        } else {
          jumpsBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setJumps(
          int index, binparse.trace.TraceSerializer.ControlFlowTrace.ControlFlow.Builder builderForValue) {
        if (jumpsBuilder_ == null) {
          ensureJumpsIsMutable();
          jumps_.set(index, builderForValue.build());
          onChanged();
        } else {
          jumpsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addJumps(binparse.trace.TraceSerializer.ControlFlowTrace.ControlFlow value) {
        if (jumpsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureJumpsIsMutable();
          jumps_.add(value);
          onChanged();
        } else {
          jumpsBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addJumps(
          int index, binparse.trace.TraceSerializer.ControlFlowTrace.ControlFlow value) {
        if (jumpsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureJumpsIsMutable();
          jumps_.add(index, value);
          onChanged();
        } else {
          jumpsBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addJumps(
          binparse.trace.TraceSerializer.ControlFlowTrace.ControlFlow.Builder builderForValue) {
        if (jumpsBuilder_ == null) {
          ensureJumpsIsMutable();
          jumps_.add(builderForValue.build());
          onChanged();
        } else {
          jumpsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addJumps(
          int index, binparse.trace.TraceSerializer.ControlFlowTrace.ControlFlow.Builder builderForValue) {
        if (jumpsBuilder_ == null) {
          ensureJumpsIsMutable();
          jumps_.add(index, builderForValue.build());
          onChanged();
        } else {
          jumpsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllJumps(
          java.lang.Iterable<? extends binparse.trace.TraceSerializer.ControlFlowTrace.ControlFlow> values) {
        if (jumpsBuilder_ == null) {
          ensureJumpsIsMutable();
          super.addAll(values, jumps_);
          onChanged();
        } else {
          jumpsBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearJumps() {
        if (jumpsBuilder_ == null) {
          jumps_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          jumpsBuilder_.clear();
        }
        return this;
      }
      public Builder removeJumps(int index) {
        if (jumpsBuilder_ == null) {
          ensureJumpsIsMutable();
          jumps_.remove(index);
          onChanged();
        } else {
          jumpsBuilder_.remove(index);
        }
        return this;
      }
      public binparse.trace.TraceSerializer.ControlFlowTrace.ControlFlow.Builder getJumpsBuilder(
          int index) {
        return getJumpsFieldBuilder().getBuilder(index);
      }
      @Override
      public binparse.trace.TraceSerializer.ControlFlowTrace.ControlFlowOrBuilder getJumpsOrBuilder(
          int index) {
        if (jumpsBuilder_ == null) {
          return jumps_.get(index);  } else {
          return jumpsBuilder_.getMessageOrBuilder(index);
        }
      }
      @Override
      public java.util.List<? extends binparse.trace.TraceSerializer.ControlFlowTrace.ControlFlowOrBuilder>
           getJumpsOrBuilderList() {
        if (jumpsBuilder_ != null) {
          return jumpsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(jumps_);
        }
      }
      public binparse.trace.TraceSerializer.ControlFlowTrace.ControlFlow.Builder addJumpsBuilder() {
        return getJumpsFieldBuilder().addBuilder(
            binparse.trace.TraceSerializer.ControlFlowTrace.ControlFlow.getDefaultInstance());
      }
      public binparse.trace.TraceSerializer.ControlFlowTrace.ControlFlow.Builder addJumpsBuilder(
          int index) {
        return getJumpsFieldBuilder().addBuilder(
            index, binparse.trace.TraceSerializer.ControlFlowTrace.ControlFlow.getDefaultInstance());
      }
      public java.util.List<binparse.trace.TraceSerializer.ControlFlowTrace.ControlFlow.Builder>
           getJumpsBuilderList() {
        return getJumpsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          binparse.trace.TraceSerializer.ControlFlowTrace.ControlFlow, binparse.trace.TraceSerializer.ControlFlowTrace.ControlFlow.Builder, binparse.trace.TraceSerializer.ControlFlowTrace.ControlFlowOrBuilder>
          getJumpsFieldBuilder() {
        if (jumpsBuilder_ == null) {
          jumpsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              binparse.trace.TraceSerializer.ControlFlowTrace.ControlFlow, binparse.trace.TraceSerializer.ControlFlowTrace.ControlFlow.Builder, binparse.trace.TraceSerializer.ControlFlowTrace.ControlFlowOrBuilder>(
                  jumps_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          jumps_ = null;
        }
        return jumpsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:traces.ControlFlowTrace)
    }

    static {
      defaultInstance = new ControlFlowTrace(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:traces.ControlFlowTrace)
  }

  public interface MallocTraceOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .traces.MallocTrace.MallocCall mallocs = 1;
    java.util.List<binparse.trace.TraceSerializer.MallocTrace.MallocCall>
        getMallocsList();
    binparse.trace.TraceSerializer.MallocTrace.MallocCall getMallocs(int index);
    int getMallocsCount();
    java.util.List<? extends binparse.trace.TraceSerializer.MallocTrace.MallocCallOrBuilder>
        getMallocsOrBuilderList();
    binparse.trace.TraceSerializer.MallocTrace.MallocCallOrBuilder getMallocsOrBuilder(
        int index);

    // repeated .traces.MallocTrace.FreeCall frees = 2;
    java.util.List<binparse.trace.TraceSerializer.MallocTrace.FreeCall>
        getFreesList();
    binparse.trace.TraceSerializer.MallocTrace.FreeCall getFrees(int index);
    int getFreesCount();
    java.util.List<? extends binparse.trace.TraceSerializer.MallocTrace.FreeCallOrBuilder>
        getFreesOrBuilderList();
    binparse.trace.TraceSerializer.MallocTrace.FreeCallOrBuilder getFreesOrBuilder(
        int index);
  }
  public static final class MallocTrace extends
      com.google.protobuf.GeneratedMessage
      implements MallocTraceOrBuilder {
    // Use MallocTrace.newBuilder() to construct.
    private MallocTrace(Builder builder) {
      super(builder);
    }
    private MallocTrace(boolean noInit) {}

    private static final MallocTrace defaultInstance;
    public static MallocTrace getDefaultInstance() {
      return defaultInstance;
    }

    @Override
    public MallocTrace getDefaultInstanceForType() {
      return defaultInstance;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return binparse.trace.TraceSerializer.internal_static_traces_MallocTrace_descriptor;
    }

    @Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return binparse.trace.TraceSerializer.internal_static_traces_MallocTrace_fieldAccessorTable;
    }

    public interface MallocCallOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // required uint64 callSite = 1;
      boolean hasCallSite();
      long getCallSite();

      // required uint64 returnSite = 2;
      boolean hasReturnSite();
      long getReturnSite();

      // required uint64 sizeArgument = 3;
      boolean hasSizeArgument();
      long getSizeArgument();

      // required uint64 returnValue = 4;
      boolean hasReturnValue();
      long getReturnValue();
    }
    public static final class MallocCall extends
        com.google.protobuf.GeneratedMessage
        implements MallocCallOrBuilder {
      // Use MallocCall.newBuilder() to construct.
      private MallocCall(Builder builder) {
        super(builder);
      }
      private MallocCall(boolean noInit) {}

      private static final MallocCall defaultInstance;
      public static MallocCall getDefaultInstance() {
        return defaultInstance;
      }

      @Override
      public MallocCall getDefaultInstanceForType() {
        return defaultInstance;
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return binparse.trace.TraceSerializer.internal_static_traces_MallocTrace_MallocCall_descriptor;
      }

      @Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return binparse.trace.TraceSerializer.internal_static_traces_MallocTrace_MallocCall_fieldAccessorTable;
      }

      private int bitField0_;
      // required uint64 callSite = 1;
      public static final int CALLSITE_FIELD_NUMBER = 1;
      private long callSite_;
      @Override
      public boolean hasCallSite() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      @Override
      public long getCallSite() {
        return callSite_;
      }

      // required uint64 returnSite = 2;
      public static final int RETURNSITE_FIELD_NUMBER = 2;
      private long returnSite_;
      @Override
      public boolean hasReturnSite() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      @Override
      public long getReturnSite() {
        return returnSite_;
      }

      // required uint64 sizeArgument = 3;
      public static final int SIZEARGUMENT_FIELD_NUMBER = 3;
      private long sizeArgument_;
      @Override
      public boolean hasSizeArgument() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      @Override
      public long getSizeArgument() {
        return sizeArgument_;
      }

      // required uint64 returnValue = 4;
      public static final int RETURNVALUE_FIELD_NUMBER = 4;
      private long returnValue_;
      @Override
      public boolean hasReturnValue() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      @Override
      public long getReturnValue() {
        return returnValue_;
      }

      private void initFields() {
        callSite_ = 0L;
        returnSite_ = 0L;
        sizeArgument_ = 0L;
        returnValue_ = 0L;
      }
      private byte memoizedIsInitialized = -1;
      @Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasCallSite()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasReturnSite()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasSizeArgument()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasReturnValue()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      @Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt64(1, callSite_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt64(2, returnSite_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeUInt64(3, sizeArgument_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeUInt64(4, returnValue_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      @Override
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(1, callSite_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(2, returnSite_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(3, sizeArgument_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(4, returnValue_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static binparse.trace.TraceSerializer.MallocTrace.MallocCall parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static binparse.trace.TraceSerializer.MallocTrace.MallocCall parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static binparse.trace.TraceSerializer.MallocTrace.MallocCall parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static binparse.trace.TraceSerializer.MallocTrace.MallocCall parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static binparse.trace.TraceSerializer.MallocTrace.MallocCall parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static binparse.trace.TraceSerializer.MallocTrace.MallocCall parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static binparse.trace.TraceSerializer.MallocTrace.MallocCall parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static binparse.trace.TraceSerializer.MallocTrace.MallocCall parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static binparse.trace.TraceSerializer.MallocTrace.MallocCall parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static binparse.trace.TraceSerializer.MallocTrace.MallocCall parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }

      public static Builder newBuilder() { return Builder.create(); }
      @Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(binparse.trace.TraceSerializer.MallocTrace.MallocCall prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      @Override
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements binparse.trace.TraceSerializer.MallocTrace.MallocCallOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return binparse.trace.TraceSerializer.internal_static_traces_MallocTrace_MallocCall_descriptor;
        }

        @Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return binparse.trace.TraceSerializer.internal_static_traces_MallocTrace_MallocCall_fieldAccessorTable;
        }

        // Construct using binparse.trace.TraceSerializer.MallocTrace.MallocCall.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        @Override
        public Builder clear() {
          super.clear();
          callSite_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000001);
          returnSite_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000002);
          sizeArgument_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000004);
          returnValue_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }

        @Override
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        @Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return binparse.trace.TraceSerializer.MallocTrace.MallocCall.getDescriptor();
        }

        @Override
        public binparse.trace.TraceSerializer.MallocTrace.MallocCall getDefaultInstanceForType() {
          return binparse.trace.TraceSerializer.MallocTrace.MallocCall.getDefaultInstance();
        }

        @Override
        public binparse.trace.TraceSerializer.MallocTrace.MallocCall build() {
          binparse.trace.TraceSerializer.MallocTrace.MallocCall result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        private binparse.trace.TraceSerializer.MallocTrace.MallocCall buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          binparse.trace.TraceSerializer.MallocTrace.MallocCall result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }

        @Override
        public binparse.trace.TraceSerializer.MallocTrace.MallocCall buildPartial() {
          binparse.trace.TraceSerializer.MallocTrace.MallocCall result = new binparse.trace.TraceSerializer.MallocTrace.MallocCall(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.callSite_ = callSite_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.returnSite_ = returnSite_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.sizeArgument_ = sizeArgument_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.returnValue_ = returnValue_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof binparse.trace.TraceSerializer.MallocTrace.MallocCall) {
            return mergeFrom((binparse.trace.TraceSerializer.MallocTrace.MallocCall)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(binparse.trace.TraceSerializer.MallocTrace.MallocCall other) {
          if (other == binparse.trace.TraceSerializer.MallocTrace.MallocCall.getDefaultInstance()) return this;
          if (other.hasCallSite()) {
            setCallSite(other.getCallSite());
          }
          if (other.hasReturnSite()) {
            setReturnSite(other.getReturnSite());
          }
          if (other.hasSizeArgument()) {
            setSizeArgument(other.getSizeArgument());
          }
          if (other.hasReturnValue()) {
            setReturnValue(other.getReturnValue());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        @Override
        public final boolean isInitialized() {
          if (!hasCallSite()) {

            return false;
          }
          if (!hasReturnSite()) {

            return false;
          }
          if (!hasSizeArgument()) {

            return false;
          }
          if (!hasReturnValue()) {

            return false;
          }
          return true;
        }

        @Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  onChanged();
                  return this;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                callSite_ = input.readUInt64();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                returnSite_ = input.readUInt64();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                sizeArgument_ = input.readUInt64();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                returnValue_ = input.readUInt64();
                break;
              }
            }
          }
        }

        private int bitField0_;

        // required uint64 callSite = 1;
        private long callSite_ ;
        @Override
        public boolean hasCallSite() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        @Override
        public long getCallSite() {
          return callSite_;
        }
        public Builder setCallSite(long value) {
          bitField0_ |= 0x00000001;
          callSite_ = value;
          onChanged();
          return this;
        }
        public Builder clearCallSite() {
          bitField0_ = (bitField0_ & ~0x00000001);
          callSite_ = 0L;
          onChanged();
          return this;
        }

        // required uint64 returnSite = 2;
        private long returnSite_ ;
        @Override
        public boolean hasReturnSite() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        @Override
        public long getReturnSite() {
          return returnSite_;
        }
        public Builder setReturnSite(long value) {
          bitField0_ |= 0x00000002;
          returnSite_ = value;
          onChanged();
          return this;
        }
        public Builder clearReturnSite() {
          bitField0_ = (bitField0_ & ~0x00000002);
          returnSite_ = 0L;
          onChanged();
          return this;
        }

        // required uint64 sizeArgument = 3;
        private long sizeArgument_ ;
        @Override
        public boolean hasSizeArgument() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        @Override
        public long getSizeArgument() {
          return sizeArgument_;
        }
        public Builder setSizeArgument(long value) {
          bitField0_ |= 0x00000004;
          sizeArgument_ = value;
          onChanged();
          return this;
        }
        public Builder clearSizeArgument() {
          bitField0_ = (bitField0_ & ~0x00000004);
          sizeArgument_ = 0L;
          onChanged();
          return this;
        }

        // required uint64 returnValue = 4;
        private long returnValue_ ;
        @Override
        public boolean hasReturnValue() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        @Override
        public long getReturnValue() {
          return returnValue_;
        }
        public Builder setReturnValue(long value) {
          bitField0_ |= 0x00000008;
          returnValue_ = value;
          onChanged();
          return this;
        }
        public Builder clearReturnValue() {
          bitField0_ = (bitField0_ & ~0x00000008);
          returnValue_ = 0L;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:traces.MallocTrace.MallocCall)
      }

      static {
        defaultInstance = new MallocCall(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:traces.MallocTrace.MallocCall)
    }

    public interface FreeCallOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // required uint64 callSite = 1;
      boolean hasCallSite();
      long getCallSite();

      // required uint64 returnSite = 2;
      boolean hasReturnSite();
      long getReturnSite();

      // required uint64 pointerArgument = 3;
      boolean hasPointerArgument();
      long getPointerArgument();
    }
    public static final class FreeCall extends
        com.google.protobuf.GeneratedMessage
        implements FreeCallOrBuilder {
      // Use FreeCall.newBuilder() to construct.
      private FreeCall(Builder builder) {
        super(builder);
      }
      private FreeCall(boolean noInit) {}

      private static final FreeCall defaultInstance;
      public static FreeCall getDefaultInstance() {
        return defaultInstance;
      }

      @Override
      public FreeCall getDefaultInstanceForType() {
        return defaultInstance;
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return binparse.trace.TraceSerializer.internal_static_traces_MallocTrace_FreeCall_descriptor;
      }

      @Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return binparse.trace.TraceSerializer.internal_static_traces_MallocTrace_FreeCall_fieldAccessorTable;
      }

      private int bitField0_;
      // required uint64 callSite = 1;
      public static final int CALLSITE_FIELD_NUMBER = 1;
      private long callSite_;
      @Override
      public boolean hasCallSite() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      @Override
      public long getCallSite() {
        return callSite_;
      }

      // required uint64 returnSite = 2;
      public static final int RETURNSITE_FIELD_NUMBER = 2;
      private long returnSite_;
      @Override
      public boolean hasReturnSite() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      @Override
      public long getReturnSite() {
        return returnSite_;
      }

      // required uint64 pointerArgument = 3;
      public static final int POINTERARGUMENT_FIELD_NUMBER = 3;
      private long pointerArgument_;
      @Override
      public boolean hasPointerArgument() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      @Override
      public long getPointerArgument() {
        return pointerArgument_;
      }

      private void initFields() {
        callSite_ = 0L;
        returnSite_ = 0L;
        pointerArgument_ = 0L;
      }
      private byte memoizedIsInitialized = -1;
      @Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasCallSite()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasReturnSite()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasPointerArgument()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      @Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt64(1, callSite_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt64(2, returnSite_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeUInt64(3, pointerArgument_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      @Override
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(1, callSite_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(2, returnSite_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(3, pointerArgument_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static binparse.trace.TraceSerializer.MallocTrace.FreeCall parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static binparse.trace.TraceSerializer.MallocTrace.FreeCall parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static binparse.trace.TraceSerializer.MallocTrace.FreeCall parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static binparse.trace.TraceSerializer.MallocTrace.FreeCall parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static binparse.trace.TraceSerializer.MallocTrace.FreeCall parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static binparse.trace.TraceSerializer.MallocTrace.FreeCall parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static binparse.trace.TraceSerializer.MallocTrace.FreeCall parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static binparse.trace.TraceSerializer.MallocTrace.FreeCall parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static binparse.trace.TraceSerializer.MallocTrace.FreeCall parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static binparse.trace.TraceSerializer.MallocTrace.FreeCall parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }

      public static Builder newBuilder() { return Builder.create(); }
      @Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(binparse.trace.TraceSerializer.MallocTrace.FreeCall prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      @Override
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements binparse.trace.TraceSerializer.MallocTrace.FreeCallOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return binparse.trace.TraceSerializer.internal_static_traces_MallocTrace_FreeCall_descriptor;
        }

        @Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return binparse.trace.TraceSerializer.internal_static_traces_MallocTrace_FreeCall_fieldAccessorTable;
        }

        // Construct using binparse.trace.TraceSerializer.MallocTrace.FreeCall.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        @Override
        public Builder clear() {
          super.clear();
          callSite_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000001);
          returnSite_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000002);
          pointerArgument_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        @Override
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        @Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return binparse.trace.TraceSerializer.MallocTrace.FreeCall.getDescriptor();
        }

        @Override
        public binparse.trace.TraceSerializer.MallocTrace.FreeCall getDefaultInstanceForType() {
          return binparse.trace.TraceSerializer.MallocTrace.FreeCall.getDefaultInstance();
        }

        @Override
        public binparse.trace.TraceSerializer.MallocTrace.FreeCall build() {
          binparse.trace.TraceSerializer.MallocTrace.FreeCall result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        private binparse.trace.TraceSerializer.MallocTrace.FreeCall buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          binparse.trace.TraceSerializer.MallocTrace.FreeCall result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }

        @Override
        public binparse.trace.TraceSerializer.MallocTrace.FreeCall buildPartial() {
          binparse.trace.TraceSerializer.MallocTrace.FreeCall result = new binparse.trace.TraceSerializer.MallocTrace.FreeCall(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.callSite_ = callSite_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.returnSite_ = returnSite_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.pointerArgument_ = pointerArgument_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof binparse.trace.TraceSerializer.MallocTrace.FreeCall) {
            return mergeFrom((binparse.trace.TraceSerializer.MallocTrace.FreeCall)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(binparse.trace.TraceSerializer.MallocTrace.FreeCall other) {
          if (other == binparse.trace.TraceSerializer.MallocTrace.FreeCall.getDefaultInstance()) return this;
          if (other.hasCallSite()) {
            setCallSite(other.getCallSite());
          }
          if (other.hasReturnSite()) {
            setReturnSite(other.getReturnSite());
          }
          if (other.hasPointerArgument()) {
            setPointerArgument(other.getPointerArgument());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        @Override
        public final boolean isInitialized() {
          if (!hasCallSite()) {

            return false;
          }
          if (!hasReturnSite()) {

            return false;
          }
          if (!hasPointerArgument()) {

            return false;
          }
          return true;
        }

        @Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  onChanged();
                  return this;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                callSite_ = input.readUInt64();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                returnSite_ = input.readUInt64();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                pointerArgument_ = input.readUInt64();
                break;
              }
            }
          }
        }

        private int bitField0_;

        // required uint64 callSite = 1;
        private long callSite_ ;
        @Override
        public boolean hasCallSite() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        @Override
        public long getCallSite() {
          return callSite_;
        }
        public Builder setCallSite(long value) {
          bitField0_ |= 0x00000001;
          callSite_ = value;
          onChanged();
          return this;
        }
        public Builder clearCallSite() {
          bitField0_ = (bitField0_ & ~0x00000001);
          callSite_ = 0L;
          onChanged();
          return this;
        }

        // required uint64 returnSite = 2;
        private long returnSite_ ;
        @Override
        public boolean hasReturnSite() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        @Override
        public long getReturnSite() {
          return returnSite_;
        }
        public Builder setReturnSite(long value) {
          bitField0_ |= 0x00000002;
          returnSite_ = value;
          onChanged();
          return this;
        }
        public Builder clearReturnSite() {
          bitField0_ = (bitField0_ & ~0x00000002);
          returnSite_ = 0L;
          onChanged();
          return this;
        }

        // required uint64 pointerArgument = 3;
        private long pointerArgument_ ;
        @Override
        public boolean hasPointerArgument() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        @Override
        public long getPointerArgument() {
          return pointerArgument_;
        }
        public Builder setPointerArgument(long value) {
          bitField0_ |= 0x00000004;
          pointerArgument_ = value;
          onChanged();
          return this;
        }
        public Builder clearPointerArgument() {
          bitField0_ = (bitField0_ & ~0x00000004);
          pointerArgument_ = 0L;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:traces.MallocTrace.FreeCall)
      }

      static {
        defaultInstance = new FreeCall(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:traces.MallocTrace.FreeCall)
    }

    // repeated .traces.MallocTrace.MallocCall mallocs = 1;
    public static final int MALLOCS_FIELD_NUMBER = 1;
    private java.util.List<binparse.trace.TraceSerializer.MallocTrace.MallocCall> mallocs_;
    @Override
    public java.util.List<binparse.trace.TraceSerializer.MallocTrace.MallocCall> getMallocsList() {
      return mallocs_;
    }
    @Override
    public java.util.List<? extends binparse.trace.TraceSerializer.MallocTrace.MallocCallOrBuilder>
        getMallocsOrBuilderList() {
      return mallocs_;
    }
    @Override
    public int getMallocsCount() {
      return mallocs_.size();
    }
    @Override
    public binparse.trace.TraceSerializer.MallocTrace.MallocCall getMallocs(int index) {
      return mallocs_.get(index);
    }
    @Override
    public binparse.trace.TraceSerializer.MallocTrace.MallocCallOrBuilder getMallocsOrBuilder(
        int index) {
      return mallocs_.get(index);
    }

    // repeated .traces.MallocTrace.FreeCall frees = 2;
    public static final int FREES_FIELD_NUMBER = 2;
    private java.util.List<binparse.trace.TraceSerializer.MallocTrace.FreeCall> frees_;
    @Override
    public java.util.List<binparse.trace.TraceSerializer.MallocTrace.FreeCall> getFreesList() {
      return frees_;
    }
    @Override
    public java.util.List<? extends binparse.trace.TraceSerializer.MallocTrace.FreeCallOrBuilder>
        getFreesOrBuilderList() {
      return frees_;
    }
    @Override
    public int getFreesCount() {
      return frees_.size();
    }
    @Override
    public binparse.trace.TraceSerializer.MallocTrace.FreeCall getFrees(int index) {
      return frees_.get(index);
    }
    @Override
    public binparse.trace.TraceSerializer.MallocTrace.FreeCallOrBuilder getFreesOrBuilder(
        int index) {
      return frees_.get(index);
    }

    private void initFields() {
      mallocs_ = java.util.Collections.emptyList();
      frees_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getMallocsCount(); i++) {
        if (!getMallocs(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getFreesCount(); i++) {
        if (!getFrees(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < mallocs_.size(); i++) {
        output.writeMessage(1, mallocs_.get(i));
      }
      for (int i = 0; i < frees_.size(); i++) {
        output.writeMessage(2, frees_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    @Override
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < mallocs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, mallocs_.get(i));
      }
      for (int i = 0; i < frees_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, frees_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static binparse.trace.TraceSerializer.MallocTrace parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static binparse.trace.TraceSerializer.MallocTrace parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static binparse.trace.TraceSerializer.MallocTrace parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static binparse.trace.TraceSerializer.MallocTrace parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static binparse.trace.TraceSerializer.MallocTrace parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static binparse.trace.TraceSerializer.MallocTrace parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static binparse.trace.TraceSerializer.MallocTrace parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static binparse.trace.TraceSerializer.MallocTrace parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static binparse.trace.TraceSerializer.MallocTrace parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static binparse.trace.TraceSerializer.MallocTrace parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }

    public static Builder newBuilder() { return Builder.create(); }
    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(binparse.trace.TraceSerializer.MallocTrace prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements binparse.trace.TraceSerializer.MallocTraceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return binparse.trace.TraceSerializer.internal_static_traces_MallocTrace_descriptor;
      }

      @Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return binparse.trace.TraceSerializer.internal_static_traces_MallocTrace_fieldAccessorTable;
      }

      // Construct using binparse.trace.TraceSerializer.MallocTrace.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMallocsFieldBuilder();
          getFreesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      @Override
      public Builder clear() {
        super.clear();
        if (mallocsBuilder_ == null) {
          mallocs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          mallocsBuilder_.clear();
        }
        if (freesBuilder_ == null) {
          frees_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          freesBuilder_.clear();
        }
        return this;
      }

      @Override
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return binparse.trace.TraceSerializer.MallocTrace.getDescriptor();
      }

      @Override
      public binparse.trace.TraceSerializer.MallocTrace getDefaultInstanceForType() {
        return binparse.trace.TraceSerializer.MallocTrace.getDefaultInstance();
      }

      @Override
      public binparse.trace.TraceSerializer.MallocTrace build() {
        binparse.trace.TraceSerializer.MallocTrace result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      private binparse.trace.TraceSerializer.MallocTrace buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        binparse.trace.TraceSerializer.MallocTrace result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }

      @Override
      public binparse.trace.TraceSerializer.MallocTrace buildPartial() {
        binparse.trace.TraceSerializer.MallocTrace result = new binparse.trace.TraceSerializer.MallocTrace(this);
        int from_bitField0_ = bitField0_;
        if (mallocsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            mallocs_ = java.util.Collections.unmodifiableList(mallocs_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.mallocs_ = mallocs_;
        } else {
          result.mallocs_ = mallocsBuilder_.build();
        }
        if (freesBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            frees_ = java.util.Collections.unmodifiableList(frees_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.frees_ = frees_;
        } else {
          result.frees_ = freesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof binparse.trace.TraceSerializer.MallocTrace) {
          return mergeFrom((binparse.trace.TraceSerializer.MallocTrace)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(binparse.trace.TraceSerializer.MallocTrace other) {
        if (other == binparse.trace.TraceSerializer.MallocTrace.getDefaultInstance()) return this;
        if (mallocsBuilder_ == null) {
          if (!other.mallocs_.isEmpty()) {
            if (mallocs_.isEmpty()) {
              mallocs_ = other.mallocs_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureMallocsIsMutable();
              mallocs_.addAll(other.mallocs_);
            }
            onChanged();
          }
        } else {
          if (!other.mallocs_.isEmpty()) {
            if (mallocsBuilder_.isEmpty()) {
              mallocsBuilder_.dispose();
              mallocsBuilder_ = null;
              mallocs_ = other.mallocs_;
              bitField0_ = (bitField0_ & ~0x00000001);
              mallocsBuilder_ =
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMallocsFieldBuilder() : null;
            } else {
              mallocsBuilder_.addAllMessages(other.mallocs_);
            }
          }
        }
        if (freesBuilder_ == null) {
          if (!other.frees_.isEmpty()) {
            if (frees_.isEmpty()) {
              frees_ = other.frees_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureFreesIsMutable();
              frees_.addAll(other.frees_);
            }
            onChanged();
          }
        } else {
          if (!other.frees_.isEmpty()) {
            if (freesBuilder_.isEmpty()) {
              freesBuilder_.dispose();
              freesBuilder_ = null;
              frees_ = other.frees_;
              bitField0_ = (bitField0_ & ~0x00000002);
              freesBuilder_ =
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFreesFieldBuilder() : null;
            } else {
              freesBuilder_.addAllMessages(other.frees_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      @Override
      public final boolean isInitialized() {
        for (int i = 0; i < getMallocsCount(); i++) {
          if (!getMallocs(i).isInitialized()) {

            return false;
          }
        }
        for (int i = 0; i < getFreesCount(); i++) {
          if (!getFrees(i).isInitialized()) {

            return false;
          }
        }
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              binparse.trace.TraceSerializer.MallocTrace.MallocCall.Builder subBuilder = binparse.trace.TraceSerializer.MallocTrace.MallocCall.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addMallocs(subBuilder.buildPartial());
              break;
            }
            case 18: {
              binparse.trace.TraceSerializer.MallocTrace.FreeCall.Builder subBuilder = binparse.trace.TraceSerializer.MallocTrace.FreeCall.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addFrees(subBuilder.buildPartial());
              break;
            }
          }
        }
      }

      private int bitField0_;

      // repeated .traces.MallocTrace.MallocCall mallocs = 1;
      private java.util.List<binparse.trace.TraceSerializer.MallocTrace.MallocCall> mallocs_ =
        java.util.Collections.emptyList();
      private void ensureMallocsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          mallocs_ = new java.util.ArrayList<binparse.trace.TraceSerializer.MallocTrace.MallocCall>(mallocs_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          binparse.trace.TraceSerializer.MallocTrace.MallocCall, binparse.trace.TraceSerializer.MallocTrace.MallocCall.Builder, binparse.trace.TraceSerializer.MallocTrace.MallocCallOrBuilder> mallocsBuilder_;

      @Override
      public java.util.List<binparse.trace.TraceSerializer.MallocTrace.MallocCall> getMallocsList() {
        if (mallocsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(mallocs_);
        } else {
          return mallocsBuilder_.getMessageList();
        }
      }
      @Override
      public int getMallocsCount() {
        if (mallocsBuilder_ == null) {
          return mallocs_.size();
        } else {
          return mallocsBuilder_.getCount();
        }
      }
      @Override
      public binparse.trace.TraceSerializer.MallocTrace.MallocCall getMallocs(int index) {
        if (mallocsBuilder_ == null) {
          return mallocs_.get(index);
        } else {
          return mallocsBuilder_.getMessage(index);
        }
      }
      public Builder setMallocs(
          int index, binparse.trace.TraceSerializer.MallocTrace.MallocCall value) {
        if (mallocsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMallocsIsMutable();
          mallocs_.set(index, value);
          onChanged();
        } else {
          mallocsBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setMallocs(
          int index, binparse.trace.TraceSerializer.MallocTrace.MallocCall.Builder builderForValue) {
        if (mallocsBuilder_ == null) {
          ensureMallocsIsMutable();
          mallocs_.set(index, builderForValue.build());
          onChanged();
        } else {
          mallocsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addMallocs(binparse.trace.TraceSerializer.MallocTrace.MallocCall value) {
        if (mallocsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMallocsIsMutable();
          mallocs_.add(value);
          onChanged();
        } else {
          mallocsBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addMallocs(
          int index, binparse.trace.TraceSerializer.MallocTrace.MallocCall value) {
        if (mallocsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMallocsIsMutable();
          mallocs_.add(index, value);
          onChanged();
        } else {
          mallocsBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addMallocs(
          binparse.trace.TraceSerializer.MallocTrace.MallocCall.Builder builderForValue) {
        if (mallocsBuilder_ == null) {
          ensureMallocsIsMutable();
          mallocs_.add(builderForValue.build());
          onChanged();
        } else {
          mallocsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addMallocs(
          int index, binparse.trace.TraceSerializer.MallocTrace.MallocCall.Builder builderForValue) {
        if (mallocsBuilder_ == null) {
          ensureMallocsIsMutable();
          mallocs_.add(index, builderForValue.build());
          onChanged();
        } else {
          mallocsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllMallocs(
          java.lang.Iterable<? extends binparse.trace.TraceSerializer.MallocTrace.MallocCall> values) {
        if (mallocsBuilder_ == null) {
          ensureMallocsIsMutable();
          super.addAll(values, mallocs_);
          onChanged();
        } else {
          mallocsBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearMallocs() {
        if (mallocsBuilder_ == null) {
          mallocs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          mallocsBuilder_.clear();
        }
        return this;
      }
      public Builder removeMallocs(int index) {
        if (mallocsBuilder_ == null) {
          ensureMallocsIsMutable();
          mallocs_.remove(index);
          onChanged();
        } else {
          mallocsBuilder_.remove(index);
        }
        return this;
      }
      public binparse.trace.TraceSerializer.MallocTrace.MallocCall.Builder getMallocsBuilder(
          int index) {
        return getMallocsFieldBuilder().getBuilder(index);
      }
      @Override
      public binparse.trace.TraceSerializer.MallocTrace.MallocCallOrBuilder getMallocsOrBuilder(
          int index) {
        if (mallocsBuilder_ == null) {
          return mallocs_.get(index);  } else {
          return mallocsBuilder_.getMessageOrBuilder(index);
        }
      }
      @Override
      public java.util.List<? extends binparse.trace.TraceSerializer.MallocTrace.MallocCallOrBuilder>
           getMallocsOrBuilderList() {
        if (mallocsBuilder_ != null) {
          return mallocsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(mallocs_);
        }
      }
      public binparse.trace.TraceSerializer.MallocTrace.MallocCall.Builder addMallocsBuilder() {
        return getMallocsFieldBuilder().addBuilder(
            binparse.trace.TraceSerializer.MallocTrace.MallocCall.getDefaultInstance());
      }
      public binparse.trace.TraceSerializer.MallocTrace.MallocCall.Builder addMallocsBuilder(
          int index) {
        return getMallocsFieldBuilder().addBuilder(
            index, binparse.trace.TraceSerializer.MallocTrace.MallocCall.getDefaultInstance());
      }
      public java.util.List<binparse.trace.TraceSerializer.MallocTrace.MallocCall.Builder>
           getMallocsBuilderList() {
        return getMallocsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          binparse.trace.TraceSerializer.MallocTrace.MallocCall, binparse.trace.TraceSerializer.MallocTrace.MallocCall.Builder, binparse.trace.TraceSerializer.MallocTrace.MallocCallOrBuilder>
          getMallocsFieldBuilder() {
        if (mallocsBuilder_ == null) {
          mallocsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              binparse.trace.TraceSerializer.MallocTrace.MallocCall, binparse.trace.TraceSerializer.MallocTrace.MallocCall.Builder, binparse.trace.TraceSerializer.MallocTrace.MallocCallOrBuilder>(
                  mallocs_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          mallocs_ = null;
        }
        return mallocsBuilder_;
      }

      // repeated .traces.MallocTrace.FreeCall frees = 2;
      private java.util.List<binparse.trace.TraceSerializer.MallocTrace.FreeCall> frees_ =
        java.util.Collections.emptyList();
      private void ensureFreesIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          frees_ = new java.util.ArrayList<binparse.trace.TraceSerializer.MallocTrace.FreeCall>(frees_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          binparse.trace.TraceSerializer.MallocTrace.FreeCall, binparse.trace.TraceSerializer.MallocTrace.FreeCall.Builder, binparse.trace.TraceSerializer.MallocTrace.FreeCallOrBuilder> freesBuilder_;

      @Override
      public java.util.List<binparse.trace.TraceSerializer.MallocTrace.FreeCall> getFreesList() {
        if (freesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(frees_);
        } else {
          return freesBuilder_.getMessageList();
        }
      }
      @Override
      public int getFreesCount() {
        if (freesBuilder_ == null) {
          return frees_.size();
        } else {
          return freesBuilder_.getCount();
        }
      }
      @Override
      public binparse.trace.TraceSerializer.MallocTrace.FreeCall getFrees(int index) {
        if (freesBuilder_ == null) {
          return frees_.get(index);
        } else {
          return freesBuilder_.getMessage(index);
        }
      }
      public Builder setFrees(
          int index, binparse.trace.TraceSerializer.MallocTrace.FreeCall value) {
        if (freesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFreesIsMutable();
          frees_.set(index, value);
          onChanged();
        } else {
          freesBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setFrees(
          int index, binparse.trace.TraceSerializer.MallocTrace.FreeCall.Builder builderForValue) {
        if (freesBuilder_ == null) {
          ensureFreesIsMutable();
          frees_.set(index, builderForValue.build());
          onChanged();
        } else {
          freesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addFrees(binparse.trace.TraceSerializer.MallocTrace.FreeCall value) {
        if (freesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFreesIsMutable();
          frees_.add(value);
          onChanged();
        } else {
          freesBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addFrees(
          int index, binparse.trace.TraceSerializer.MallocTrace.FreeCall value) {
        if (freesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFreesIsMutable();
          frees_.add(index, value);
          onChanged();
        } else {
          freesBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addFrees(
          binparse.trace.TraceSerializer.MallocTrace.FreeCall.Builder builderForValue) {
        if (freesBuilder_ == null) {
          ensureFreesIsMutable();
          frees_.add(builderForValue.build());
          onChanged();
        } else {
          freesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addFrees(
          int index, binparse.trace.TraceSerializer.MallocTrace.FreeCall.Builder builderForValue) {
        if (freesBuilder_ == null) {
          ensureFreesIsMutable();
          frees_.add(index, builderForValue.build());
          onChanged();
        } else {
          freesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllFrees(
          java.lang.Iterable<? extends binparse.trace.TraceSerializer.MallocTrace.FreeCall> values) {
        if (freesBuilder_ == null) {
          ensureFreesIsMutable();
          super.addAll(values, frees_);
          onChanged();
        } else {
          freesBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearFrees() {
        if (freesBuilder_ == null) {
          frees_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          freesBuilder_.clear();
        }
        return this;
      }
      public Builder removeFrees(int index) {
        if (freesBuilder_ == null) {
          ensureFreesIsMutable();
          frees_.remove(index);
          onChanged();
        } else {
          freesBuilder_.remove(index);
        }
        return this;
      }
      public binparse.trace.TraceSerializer.MallocTrace.FreeCall.Builder getFreesBuilder(
          int index) {
        return getFreesFieldBuilder().getBuilder(index);
      }
      @Override
      public binparse.trace.TraceSerializer.MallocTrace.FreeCallOrBuilder getFreesOrBuilder(
          int index) {
        if (freesBuilder_ == null) {
          return frees_.get(index);  } else {
          return freesBuilder_.getMessageOrBuilder(index);
        }
      }
      @Override
      public java.util.List<? extends binparse.trace.TraceSerializer.MallocTrace.FreeCallOrBuilder>
           getFreesOrBuilderList() {
        if (freesBuilder_ != null) {
          return freesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(frees_);
        }
      }
      public binparse.trace.TraceSerializer.MallocTrace.FreeCall.Builder addFreesBuilder() {
        return getFreesFieldBuilder().addBuilder(
            binparse.trace.TraceSerializer.MallocTrace.FreeCall.getDefaultInstance());
      }
      public binparse.trace.TraceSerializer.MallocTrace.FreeCall.Builder addFreesBuilder(
          int index) {
        return getFreesFieldBuilder().addBuilder(
            index, binparse.trace.TraceSerializer.MallocTrace.FreeCall.getDefaultInstance());
      }
      public java.util.List<binparse.trace.TraceSerializer.MallocTrace.FreeCall.Builder>
           getFreesBuilderList() {
        return getFreesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          binparse.trace.TraceSerializer.MallocTrace.FreeCall, binparse.trace.TraceSerializer.MallocTrace.FreeCall.Builder, binparse.trace.TraceSerializer.MallocTrace.FreeCallOrBuilder>
          getFreesFieldBuilder() {
        if (freesBuilder_ == null) {
          freesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              binparse.trace.TraceSerializer.MallocTrace.FreeCall, binparse.trace.TraceSerializer.MallocTrace.FreeCall.Builder, binparse.trace.TraceSerializer.MallocTrace.FreeCallOrBuilder>(
                  frees_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          frees_ = null;
        }
        return freesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:traces.MallocTrace)
    }

    static {
      defaultInstance = new MallocTrace(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:traces.MallocTrace)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_traces_TraceInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_traces_TraceInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_traces_Module_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_traces_Module_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_traces_Module_Segment_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_traces_Module_Segment_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_traces_CPUState_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_traces_CPUState_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_traces_CPUState_Register_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_traces_CPUState_Register_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_traces_ControlFlowTrace_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_traces_ControlFlowTrace_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_traces_ControlFlowTrace_ControlFlow_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_traces_ControlFlowTrace_ControlFlow_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_traces_MallocTrace_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_traces_MallocTrace_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_traces_MallocTrace_MallocCall_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_traces_MallocTrace_MallocCall_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_traces_MallocTrace_FreeCall_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_traces_MallocTrace_FreeCall_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\026trace_serializer.proto\022\006traces\"J\n\tTrac" +
      "eInfo\022\022\n\ntracedFile\030\001 \001(\t\022\024\n\014startAddres" +
      "s\030\002 \002(\004\022\023\n\013stopAddress\030\003 \002(\004\"\372\001\n\006Module\022" +
      "(\n\010segments\030\001 \003(\0132\026.traces.Module.Segmen" +
      "t\032\305\001\n\007Segment\022\014\n\004name\030\001 \001(\t\022\020\n\010fileName\030" +
      "\002 \001(\t\022\023\n\013permissions\030\003 \001(\005\0225\n\nendianness" +
      "\030\004 \002(\0162!.traces.Module.Segment.Endiannes" +
      "s\022\017\n\007address\030\005 \002(\004\022\014\n\004size\030\006 \002(\r\022\014\n\004data" +
      "\030\007 \001(\014\"!\n\nEndianness\022\n\n\006LITTLE\020\000\022\007\n\003BIG\020" +
      "\001\"a\n\010CPUState\022,\n\tregisters\030\001 \003(\0132\031.trace",
      "s.CPUState.Register\032\'\n\010Register\022\014\n\004name\030" +
      "\001 \002(\t\022\r\n\005value\030\002 \002(\004\"\223\001\n\020ControlFlowTrac" +
      "e\0223\n\005jumps\030\001 \003(\0132$.traces.ControlFlowTra" +
      "ce.ControlFlow\032J\n\013ControlFlow\022\021\n\tcurrent" +
      "PC\030\001 \002(\004\022\016\n\006nextPC\030\002 \002(\004\022\030\n\020jumpConditio" +
      "nWas\030\003 \002(\010\"\225\002\n\013MallocTrace\022/\n\007mallocs\030\001 " +
      "\003(\0132\036.traces.MallocTrace.MallocCall\022+\n\005f" +
      "rees\030\002 \003(\0132\034.traces.MallocTrace.FreeCall" +
      "\032]\n\nMallocCall\022\020\n\010callSite\030\001 \002(\004\022\022\n\nretu" +
      "rnSite\030\002 \002(\004\022\024\n\014sizeArgument\030\003 \002(\004\022\023\n\013re",
      "turnValue\030\004 \002(\004\032I\n\010FreeCall\022\020\n\010callSite\030" +
      "\001 \002(\004\022\022\n\nreturnSite\030\002 \002(\004\022\027\n\017pointerArgu" +
      "ment\030\003 \002(\004B!\n\016binparse.traceB\017TraceSeria" +
      "lizer"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        @Override
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_traces_TraceInfo_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_traces_TraceInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_traces_TraceInfo_descriptor,
              new java.lang.String[] { "TracedFile", "StartAddress", "StopAddress", },
              binparse.trace.TraceSerializer.TraceInfo.class,
              binparse.trace.TraceSerializer.TraceInfo.Builder.class);
          internal_static_traces_Module_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_traces_Module_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_traces_Module_descriptor,
              new java.lang.String[] { "Segments", },
              binparse.trace.TraceSerializer.Module.class,
              binparse.trace.TraceSerializer.Module.Builder.class);
          internal_static_traces_Module_Segment_descriptor =
            internal_static_traces_Module_descriptor.getNestedTypes().get(0);
          internal_static_traces_Module_Segment_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_traces_Module_Segment_descriptor,
              new java.lang.String[] { "Name", "FileName", "Permissions", "Endianness", "Address", "Size", "Data", },
              binparse.trace.TraceSerializer.Module.Segment.class,
              binparse.trace.TraceSerializer.Module.Segment.Builder.class);
          internal_static_traces_CPUState_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_traces_CPUState_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_traces_CPUState_descriptor,
              new java.lang.String[] { "Registers", },
              binparse.trace.TraceSerializer.CPUState.class,
              binparse.trace.TraceSerializer.CPUState.Builder.class);
          internal_static_traces_CPUState_Register_descriptor =
            internal_static_traces_CPUState_descriptor.getNestedTypes().get(0);
          internal_static_traces_CPUState_Register_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_traces_CPUState_Register_descriptor,
              new java.lang.String[] { "Name", "Value", },
              binparse.trace.TraceSerializer.CPUState.Register.class,
              binparse.trace.TraceSerializer.CPUState.Register.Builder.class);
          internal_static_traces_ControlFlowTrace_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_traces_ControlFlowTrace_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_traces_ControlFlowTrace_descriptor,
              new java.lang.String[] { "Jumps", },
              binparse.trace.TraceSerializer.ControlFlowTrace.class,
              binparse.trace.TraceSerializer.ControlFlowTrace.Builder.class);
          internal_static_traces_ControlFlowTrace_ControlFlow_descriptor =
            internal_static_traces_ControlFlowTrace_descriptor.getNestedTypes().get(0);
          internal_static_traces_ControlFlowTrace_ControlFlow_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_traces_ControlFlowTrace_ControlFlow_descriptor,
              new java.lang.String[] { "CurrentPC", "NextPC", "JumpConditionWas", },
              binparse.trace.TraceSerializer.ControlFlowTrace.ControlFlow.class,
              binparse.trace.TraceSerializer.ControlFlowTrace.ControlFlow.Builder.class);
          internal_static_traces_MallocTrace_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_traces_MallocTrace_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_traces_MallocTrace_descriptor,
              new java.lang.String[] { "Mallocs", "Frees", },
              binparse.trace.TraceSerializer.MallocTrace.class,
              binparse.trace.TraceSerializer.MallocTrace.Builder.class);
          internal_static_traces_MallocTrace_MallocCall_descriptor =
            internal_static_traces_MallocTrace_descriptor.getNestedTypes().get(0);
          internal_static_traces_MallocTrace_MallocCall_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_traces_MallocTrace_MallocCall_descriptor,
              new java.lang.String[] { "CallSite", "ReturnSite", "SizeArgument", "ReturnValue", },
              binparse.trace.TraceSerializer.MallocTrace.MallocCall.class,
              binparse.trace.TraceSerializer.MallocTrace.MallocCall.Builder.class);
          internal_static_traces_MallocTrace_FreeCall_descriptor =
            internal_static_traces_MallocTrace_descriptor.getNestedTypes().get(1);
          internal_static_traces_MallocTrace_FreeCall_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_traces_MallocTrace_FreeCall_descriptor,
              new java.lang.String[] { "CallSite", "ReturnSite", "PointerArgument", },
              binparse.trace.TraceSerializer.MallocTrace.FreeCall.class,
              binparse.trace.TraceSerializer.MallocTrace.FreeCall.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
